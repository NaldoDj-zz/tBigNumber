#line 203 "D:\marinas-ide(64bits)\harbour\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 58 "D:\GitHub\core\contrib\xhb\xhb.ch"
   EXTERNAL xhb_Lib
#line 167 "D:\GitHub\tbigNumber\include\paramtypex.ch"
        Static Function __SetType( cVarName , cTypeVar , uVal , cClassName , cMessage )

            Local cTypeVal    := ValType(uVal)
            Local xRetVal

            cTypeVar        := Upper(SubStr(cTypeVar,1,1))

            if !( cTypeVal == "U" )
                if ( !( cTypeVar == "U" ) .AND. !( cTypeVar == cTypeVal ) )
                       UserException( "Variable ("+cVarName+") assignment: Data Type Mismatch. Expected ("+cTypeVar+") assigned ("+cTypeVal+")"  )
                   endif
               endif

            if ( cTypeVar == "O" )
                if Empty(cClassName)
                      if Empty(cMessage)
                        cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                    endif
                    if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
                Else
                      if Empty(cMessage)
                        cMessage := "argument error in object ("+cVarName+"), class expected ("+cClassName+")"
                    endif
                    if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
                endif
            Elseif ( cTypeVar == "C" )
                uVal := if( uVal == NIL , "" , uVal )
                if Empty(cMessage)
                    cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                 endif
                if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
            Elseif ( cTypeVar == "N" )
                uVal := if( uVal == NIL , 0 , uVal )
                 if Empty(cMessage)
                     cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                 endif
                if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
             Elseif ( cTypeVar == "L" )
                 uVal := if( uVal == NIL , .F. , uVal )
                 if Empty(cMessage)
                     cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                 endif
                 if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
            Elseif ( cTypeVar == "D" )
                 uVal := if( uVal == NIL , Ctod("") , uVal )
                 if Empty(cMessage)
                     cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                 endif
                if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
             Elseif ( cTypeVar == "B" )
                 uVal := if( uVal == NIL , {||NIL} , uVal )
                 if Empty(cMessage)
                     cMessage    := "argument error in block ("+cVarName+"), return expected "
                 endif
                 if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
            Elseif ( cTypeVar == "A" )
                 uVal := if( uVal == NIL , Array(0) , uVal )
                if Empty(cMessage)
                     cMessage := "argument error in variable ("+cVarName+"), expected ("+cTypeVar+") assigned ("+cTypeVal+")"
                 endif
                if (.T.); xRetVal := if(xRetVal == NIL,uVal,xRetVal); endif
            endif

        Return( xRetVal )
#line 277 "D:\GitHub\tbigNumber\include\paramtypex.ch"
            Static Function UserException(cDescription)
                Local e            := ErrorNew()
                e:description    := cDescription
                e:gencode         := 1
                e:severity         := 2
                e:cansubstitute    := .T.
                e:subsystem        := ProcName(1)



                    e:operation := "ASSIGN"

                e:subcode        := 0
                e:args            := hb_aParams(1)
            Return(( Eval( ErrorBlock(), e ), Break( e ) ))
#line 27 "D:\GitHub\tbigNumber\src\tBigNtst.prg"
EXTERNAL HB_MT
#line 31 "D:\GitHub\tbigNumber\src\tBigNtst.prg"
Function Main()
    Local aTBigNTst:=GettBigNTst()
    Local cIni    := "tbigNtst.ini"
    Local hIni    := hb_iniRead(cIni)
    Local cKey
    Local aSect
    Local cSection
    Local nMaxScrRow
    Local nMaxScrCol
    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS






    Private nACC_SET
    Private nROOT_ACC_SET
    Private nACC_ALOG
    Private __nSLEEP
    Private nN_TEST
    Private lL_ALOG
    Private aC_OOPROGRESS
    Private lL_OOPROGRAND
    Private lL_ROPROGRESS
    Private lL_LOGPROCESS
    IF !(File(cIni) ) .OR. Empty(hIni)
        hIni["GENERAL"] := hb_Hash()
        hIni["GENERAL"]["ACC_SET"]      := "50"
        hIni["GENERAL"]["ROOT_ACC_SET"] := "50"
        hIni["GENERAL"]["ACC_ALOG"]     := "50"
        hIni["GENERAL"]["__SLEEP"]      := "0.05"
        hIni["GENERAL"]["N_TEST"]       := "1000"
        hIni["GENERAL"]["L_ALOG"]       := "0"
        hIni["GENERAL"]["C_OOPROGRESS"] := "RANDOM,INCREMENT,DECREMENT,DISJUNCTION,UNION,DISPERSION,SHUTTLE,JUNCTION,OCCULT"
        hIni["GENERAL"]["L_OOPROGRAND"] := "0"
        hIni["GENERAL"]["L_ROPROGRESS"] := "0"
        hIni["GENERAL"]["L_LOGPROCESS"] := "0"
        hb_iniWrite(cIni,hIni,"#tbigNtst.ini","#End of file")
    Else
        FOR EACH cSection IN hIni:Keys
            aSect := hIni[ cSection ]
            FOR EACH cKey IN aSect:Keys
                SWITCH Upper(cKey)
                    CASE "ACC_SET"
                        nACC_SET        := Val(aSect[cKey])
                        EXIT
                    CASE "ROOT_ACC_SET"
                        nROOT_ACC_SET   := Val(aSect[cKey])
                        EXIT
                    CASE "ACC_ALOG"
                        nACC_ALOG       := Val(aSect[cKey])
                        EXIT
                    CASE "__SLEEP"
                        __nSLEEP        := Val(aSect[cKey])
                        EXIT
                    CASE "N_TEST"
                        nN_TEST         := Val(aSect[cKey])
                        EXIT
                    CASE "L_ALOG"
                        lL_ALOG         := (aSect[cKey]=="1")
                        EXIT
                    CASE "C_OOPROGRESS"
                        aC_OOPROGRESS   := hb_aTokens(Upper(xhb_AllTrim( aSect[cKey] )),",")
                        EXIT
                    CASE "L_OOPROGRAND"
                        lL_OOPROGRAND   := (aSect[cKey]=="1")
                        EXIT
                    CASE "L_ROPROGRESS"
                        lL_ROPROGRESS   := (aSect[cKey]=="1")
                        EXIT
                    CASE "L_LOGPROCESS"
                        lL_LOGPROCESS   := (aSect[cKey]=="1")
                ENDSWITCH
            next
        next
    EndIF
    nACC_SET        := IF(Empty(nACC_SET),Val("50"),nACC_SET)
    nROOT_ACC_SET   := IF(Empty(nROOT_ACC_SET),Val("50"),nROOT_ACC_SET)
    nACC_ALOG       := IF(Empty(nACC_ALOG),Val("50"),nACC_ALOG)
    __nSLEEP        := IF(Empty(__nSLEEP),Val("0.05"),__nSLEEP)
    nN_TEST         := IF(Empty(nN_TEST),Val("1000"),nN_TEST)
    lL_ALOG         := IF(Empty(lL_ALOG),"0"=="1",lL_ALOG)
    aC_OOPROGRESS   := IF(Empty(aC_OOPROGRESS),hb_aTokens(Upper(xhb_AllTrim( "RANDOM,INCREMENT,DECREMENT,DISJUNCTION,UNION,DISPERSION,SHUTTLE,JUNCTION,OCCULT" )),","),aC_OOPROGRESS)
    lL_OOPROGRAND   := IF(Empty(lL_OOPROGRAND),"0"=="1",lL_OOPROGRAND)
    lL_ROPROGRESS   := IF(Empty(lL_ROPROGRESS),"0"=="1",lL_ROPROGRESS)
    lL_LOGPROCESS   := IF(Empty(lL_LOGPROCESS),"0"=="1",lL_LOGPROCESS)
    __SetCentury("ON")
    Set( 4, if(__SetCentury(), "dd/mm/yyyy", "dd/mm/yy") )
    __nSLEEP        := Min(__nSLEEP,10)
    IF ((__nSLEEP)>10)
        __nSLEEP /= 10
    EndIF

    hb_gtInfo( 25, 255 )

    hb_cdpSelect( "EN" )
    hb_setTermCP( "EN" )

    hb_gtInfo( 5, 6+4 )
    hb_gtInfo( 4, 12+4 )

    SetMode(MaxRow()+1,MaxCol()+1)

    nMaxScrRow := hb_gtInfo( 20 )
    nMaxScrCol := hb_gtInfo( 21 )

    SetMode(nMaxScrRow,nMaxScrCol)

    hb_gtInfo( 26, "BlackTDN :: tBigNtst [http://www.blacktdn.com.br]" )
Return(tBigNTst(@aTBigNTst))
Static Procedure tBigNTst(aTBigNTst)



































































    Local tsBegin    := HB_DATETIME()
    Local nsElapsed


    LOCAL dStartDate := __SetType("dStartDate","DATE",Date(),,)
    Local dEndDate
    LOCAL cStartTime := __SetType("cStartTime","CHARACTER",Time(),,)
    LOCAL cEndTime := __SetType("cEndTime","CHARACTER",,,)


    LOCAL cFld := __SetType("cFld","CHARACTER",(hb_CurDrive()+hb_osDriveSeparator()+hb_osPathSeparator()+CurDir())+hb_osPathSeparator()+"tbigN_log"+hb_osPathSeparator(),,)
    LOCAL cLog := __SetType("cLog","CHARACTER",cFld+"tBigNTst_"+Dtos(Date())+"_"+StrTran(Time(),":","_")+"_"+StrZero(HB_RandomInt(1,999),3)+".log",,)
    Local ptProgress   := @Progress()
    Local ptthProgress
    Local ptftProgress := @ftProgress()
    Local ptthftProgress




    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL fhLog := __SetType("fhLog","NUMBER",,,)



    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    PRIVATE __nMaxRow := __SetType("__nMaxRow","NUMBER",(MaxRow()-8),,)
    PRIVATE __nMaxCol := __SetType("__nMaxCol","NUMBER",MaxCol(),,)
    PRIVATE __nCol := __SetType("__nCol","NUMBER",Int((__nMaxCol)/2),,)
    PRIVATE __nRow := __SetType("__nRow","NUMBER",0,,)
    PRIVATE __noProgress := __SetType("__noProgress","NUMBER",Int(((__nMaxCol)/3)-(__nCol/6)),,)

    PRIVATE __cSep := __SetType("__cSep","CHARACTER",Replicate("-",__nMaxCol),,)




    PRIVATE __lKillProgress := __SetType("__lKillProgress","LOGICAL",.F.,,)


    PRIVATE __oRTimeProc := __SetType("__oRTimeProc","OBJECT",tRemaining():New(35),"TREMAINING",)

    Private __phMutex := hb_mutexCreate()

    MakeDir(cFld)








    PRIVATE __CRLF := __SetType("__CRLF","CHARACTER",hb_osNewLine(),,)
    PRIVATE __oRTime1 := __SetType("__oRTime1","OBJECT",tRemaining():New(),"TREMAINING",)
    PRIVATE __oRTime2 := __SetType("__oRTime2","OBJECT",tRemaining():New(),"TREMAINING",)

    fhLog := if(lL_LOGPROCESS,fCreate(cLog,0),-1)
    if (lL_LOGPROCESS)
        fClose(fhLog)
        fhLog := fOpen(cLog,2+64)
    endif

    Private nISQRT := Int(SQRT(nN_TEST))


    SetColor("w+/n")
    SetCursor(0)
    BuildScreen(fhLog,__nMaxCol)


    __ConOut(fhLog,__cSep)

        DispOutAT(3,(__nCol-1),"[ ]")


    __ConOut(fhLog,"START ")
    __ConOut(fhLog,"DATE        : " , dStartDate)
    __ConOut(fhLog,"TIME        : " , cStartTime)


        __ConOut(fhLog,"TIMESTAMP   : " , HB_TTOC(tsBegin))












            __ConOut(fhLog,"USING       : " , ExeName() + " :: STRING")




        __ConOut(fhLog,"FINAL1      : " , "["+StrZero(__oRTime1:GetnProgress(),10)+"/"+StrZero(__oRTime1:GetnTotal(),10)+"]|["+DtoC(__oRTime1:GetdEndTime())+"]["+__oRTime1:GetcEndTime()+"]|["+__oRTime1:GetcMediumTime()+"]")
        __ConOut(fhLog,"FINAL2      : " , "["+StrZero(__oRTime2:GetnProgress(),10)+"/"+StrZero(__oRTime2:GetnTotal(),10)+"]|["+DtoC(__oRTime2:GetdEndTime())+"]["+__oRTime2:GetcEndTime()+"]|["+__oRTime2:GetcMediumTime()+"]")
        __ConOut(fhLog,"")
        __ConOut(fhLog,"")
        DispOutAT(12,__noProgress,"["+Space(__noProgress)+"]","w+/n")


    __ConOut(fhLog,"")


        DispOutAT(14,0,Replicate("*",__nMaxCol),"w+/n")
        DispOutAT(__nMaxRow+1,0,Replicate("*",__nMaxCol),"w+/n")


    __ConOut(fhLog,"")






        ptthProgress    := hb_threadStart(HB_BITOR(2, 3), ptProgress,__nCol,aC_OOPROGRESS,__noProgress,__nSLEEP,__nMaxCol,lL_OOPROGRAND,lL_ROPROGRESS)


        ptthftProgress  := hb_threadStart(HB_BITOR(2, 3), ptftProgress,__nSLEEP,__nMaxCol,__nMaxRow)


    aEval(aTBigNTst,{|e|if(e[2],Eval(e[1],fhLog),NIL)})


    __nRow := __nMaxRow


    __ConOut(fhLog,"END ")

    dEndDate := Date()
    __ConOut(fhLog,"DATE    :" , dEndDate )

    cEndTime := Time()
    __ConOut(fhLog,"TIME    :" , cEndTime )






        nsElapsed     := (HB_DATETIME()-tsBegin)
        __ConOut(fhLog,"ELAPSED :" , HB_TTOC(HB_NTOT(nsElapsed)) )



    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTimeProc:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"ACC_SET     :",nACC_SET)
    __ConOut(fhLog,"ROOT_ACC_SET:",nROOT_ACC_SET)
    __ConOut(fhLog,"ACC_ALOG    :",nACC_ALOG)
    __ConOut(fhLog,"__SLEEP     :",__nSLEEP)
    __ConOut(fhLog,"N_TEST      :",nN_TEST)
    __ConOut(fhLog,"L_ALOG      :",lL_ALOG)

    __ConOut(fhLog,__cSep)

    if (lL_LOGPROCESS)
        fClose(fhLog)
    endif






    __lKillProgress := .T.
    hb_threadQuitRequest(ptthProgress)
    hb_threadQuitRequest(ptthftProgress)
    hb_ThreadWait(ptthProgress)
    hb_ThreadWait(ptthftProgress)
    hb_gcAll(.T.)
    SetColor( '"r+/n"' )
    __Wait( "Press any key to end" )
    Scroll() ; SetPos(0,0)


Return

Static Procedure __tbnSleep(nSleep)




        MEMVAR __nSLEEP

    if (.T.); nSleep := if(nSleep == NIL,__nSLEEP,nSleep); endif








            hb_idleSleep(nSleep)


Return

Static Procedure __ConOut(fhLog,e,d)

    LOCAL ld := __SetType("ld","LOGICAL",,,)
    LOCAL lSep := __SetType("lSep","LOGICAL",,,)
    LOCAL lMRow := __SetType("lMRow","LOGICAL",,,)

    LOCAL p := __SetType("p","CHARACTER",,,)

    LOCAL nATd := __SetType("nATd","NUMBER",,,)

    LOCAL x := __SetType("x","UNDEFINED",,,)
    LOCAL y := __SetType("y","UNDEFINED",,,)



    LOCAL cDOAt := __SetType("cDOAt","CHARACTER",,,)

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nRow

    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR lL_LOGPROCESS



    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif
    if (.F.); e := if(e == NIL,,e); endif
    if (.F.); d := if(d == NIL,,d); endif

    ld := !(Empty(d))

    x := cValToChar(e)

    IF (ld)
        y := cValToChar(d)
        nATd := AT("RESULT",y)
    Else
        y := ""
    EndIF

    p := x + IF(ld , " " + y , "")



    Scroll( 09, 15, 09, __nMaxCol ) ; SetPos( 09, 15 )
    cDOAt := "["
    cDOAt += StrZero(__oRTime1:GetnProgress(),10)
    cDOAt += "/"
    cDOAt += StrZero(__oRTime1:GetnTotal(),10)
    cDOAt += "]|["
    cDOAt += DtoC(__oRTime1:GetdEndTime())
    cDOAt += "]["+__oRTime1:GetcEndTime()
    cDOAt += "]|["
    cDOAt += __oRTime1:GetcMediumTime()
    cDOAt += "]["
    cDOAt += hb_NtoS((__oRTime1:GetnProgress()/__oRTime1:GetnTotal())*100)
    cDOAt += " %]"
    DispOutAT(09,15,cDOAt,"w+/n")

    Scroll( 10, 15, 10, __nMaxCol ) ; SetPos( 10, 15 )
    cDOAt := "["
    cDOAt += StrZero(__oRTime2:GetnProgress(),10)
    cDOAt += "/"
    cDOAt += StrZero(__oRTime2:GetnTotal(),10)
    cDOAt += "]|["
    cDOAt += DtoC(__oRTime2:GetdEndTime())
    cDOAt += "]["+__oRTime2:GetcEndTime()
    cDOAt += "]|["
    cDOAt += __oRTime2:GetcMediumTime()
    cDOAt += "]["
    cDOAt += hb_NtoS((__oRTime2:GetnProgress()/__oRTime2:GetnTotal())*100)
    cDOAt += " %]"
    DispOutAT(10,15,cDOAt,"w+/n")

    iif( __nRow == NIL , hb_Default(@__nRow,0) , )
    IF ++__nRow >= __nMaxRow
        Scroll( 15, 0, __nMaxRow, __nMaxCol ) ; SetPos( 15, 0 )
        __nRow := 15
    EndIF

    lSep := (p==__cSep)
    lMRow := (__nRow>=15)

    DispOutAT(__nRow,0,p,IF(!(lSep).AND.lMRow,"w+/n",IF(lSep.AND.lMRow,"c+/n","w+/n")))

    IF hb_mutexLock(__phMutex)
        __oRTimeProc:Calcule("-------------- END"$p)
        hb_mutexUnLock(__phMutex)
    EndIF





    if (lL_LOGPROCESS)
        IF ((ld) .AND. (nATd>0))
            fWrite(fhLog,x+__CRLF)
            fWrite(fhLog,"...................................................................................................."+y+__CRLF)
        Else
            fWrite(fhLog,x+y+__CRLF)
        EndIF
    endif

Return

Static Function IsHb()
    LOCAL lHarbour := __SetType("lHarbour","LOGICAL",,,)

        lHarbour := .T.



Return(lHarbour)


    Static Function cValToChar(e)
        LOCAL s := __SetType("s","UNDEFINED",,,)
        SWITCH ValType(e)
        CASE "C"
            s := e
            EXIT
        CASE "D"
            s := Dtoc(e)
            EXIT
        CASE "T"
            s := HB_TTOC(e)
            EXIT
        CASE "N"
            s := Str(e)
            EXIT
        CASE "L"
            s := IF(e,".T.",".F.")
            EXIT
        OTHERWISE
            s := ""
        ENDSWITCH
    Return(s)
    Static Procedure Progress(nCol,aProgress2,nProgress2,nSLEEP,nMaxCol,lRandom,lPRandom)

        LOCAL aRdnPG := __SetType("aRdnPG","ARRAY",Array(0),,)
        LOCAL aRdnAn := __SetType("aRdnAn","ARRAY",Array(0),,)
        LOCAL aSAnim := __SetType("aSAnim","ARRAY",Array(28),,)

        LOCAL cAT := __SetType("cAT","CHARACTER",,,)
        LOCAL cRTime := __SetType("cRTime","CHARACTER",,,)
        LOCAL cStuff := __SetType("cStuff","CHARACTER",,,)
        LOCAL cLRTime := __SetType("cLRTime","CHARACTER",,,)
        LOCAL cProgress := __SetType("cProgress","CHARACTER",,,)

        LOCAL lChange := __SetType("lChange","LOGICAL",,,)
        LOCAL lCScreen := __SetType("lCScreen","LOGICAL",.T.,,)

        LOCAL nAT := __SetType("nAT","NUMBER",,,)
        LOCAL nQT := __SetType("nQT","NUMBER",,,)
        LOCAL nLenA := __SetType("nLenA","NUMBER",Len(aSAnim),,)
        LOCAL nLenP := __SetType("nLenP","NUMBER",Len(aProgress2),,)
        LOCAL nSAnim := __SetType("nSAnim","NUMBER",1,,)
        LOCAL nSizeP := __SetType("nSizeP","NUMBER",(nProgress2*2),,)
        LOCAL nSizeP2 := __SetType("nSizeP2","NUMBER",(nSizeP*2),,)
        LOCAL nSizeP3 := __SetType("nSizeP3","NUMBER",(nSizeP*3),,)
        LOCAL nChange := __SetType("nChange","NUMBER",,,)
        LOCAL nProgress := __SetType("nProgress","NUMBER",1,,)

        LOCAL oProgress1 := __SetType("oProgress1","OBJECT",tSProgress():New(),"TSPROGRESS",)
        LOCAL oProgress2 := __SetType("oProgress2","OBJECT",tSProgress():New(),"TSPROGRESS",)

        MEMVAR __lKillProgress
        MEMVAR __oRTimeProc
        MEMVAR __phMutex

        aSAnim[01] := Replicate(Chr(7)+";",nSizeP2-1)
        aSAnim[01] := SubStr(aSAnim[01],1,nSizeP2-1)
        IF (SubStr(aSAnim[01],-1)==";")
            aSAnim[01] := SubStr(aSAnim[01],1,Len(aSAnim[01])-1)
        EndIF

        aSAnim[02] := Replicate("-;\;|;/;",nSizeP2-1)
        aSAnim[02] := SubStr(aSAnim[02],1,nSizeP2-1)
        IF (SubStr(aSAnim[02],-1)==";")
            aSAnim[02] := SubStr(aSAnim[02],1,Len(aSAnim[02])-1)
        EndIF

        aSAnim[03] := Replicate(Chr(8)+";",nSizeP2-1)
        aSAnim[03] := SubStr(aSAnim[03],1,nSizeP2-1)
        IF (SubStr(aSAnim[03],-1)==";")
            aSAnim[03] := SubStr(aSAnim[03],1,Len(aSAnim[03])-1)
        EndIF

        aSAnim[04] := Replicate("*;",nSizeP2-1)
        aSAnim[04] := SubStr(aSAnim[04],1,nSizeP2-1)
        IF (SubStr(aSAnim[04],-1)==";")
            aSAnim[04] := SubStr(aSAnim[04],1,Len(aSAnim[04])-1)
        EndIF

        aSAnim[05] := Replicate(".;",nSizeP2-1)
        aSAnim[05] := SubStr(aSAnim[05],1,nSizeP2-1)
        IF (SubStr(aSAnim[05],-1)==";")
            aSAnim[05] := SubStr(aSAnim[05],1,Len(aSAnim[05])-1)
        EndIF

        aSAnim[06] := Replicate(":);",nSizeP3-1)
        aSAnim[06] := SubStr(aSAnim[06],1,nSizeP3-1)
        IF (SubStr(aSAnim[06],-1)==";")
            aSAnim[06] := SubStr(aSAnim[06],1,Len(aSAnim[06])-1)
        EndIF

        aSAnim[07] := Replicate(">;",nSizeP2-1)
        aSAnim[07] := SubStr(aSAnim[07],1,nSizeP2-1)
        IF (SubStr(aSAnim[07],-1)==";")
            aSAnim[07] := SubStr(aSAnim[07],1,Len(aSAnim[07])-1)
        EndIF

        aSAnim[08] := Replicate("B;L;A;C;K;T;D;N;;",nSizeP2-1)
        aSAnim[08] := SubStr(aSAnim[08],1,nSizeP2-1)
        IF (SubStr(aSAnim[08],-1)==";")
            aSAnim[08] := SubStr(aSAnim[08],1,Len(aSAnim[08])-1)
        EndIF

        aSAnim[09] := Replicate("T;B;I;G;N;U;M;B;E;R;;",nSizeP2-1)
        aSAnim[09] := SubStr(aSAnim[09],1,nSizeP2-1)
        IF (SubStr(aSAnim[09],-1)==";")
            aSAnim[09] := SubStr(aSAnim[09],1,Len(aSAnim[09])-1)
        EndIF

        aSAnim[10] := Replicate("H;A;R;B;O;U;R;;",nSizeP2-1)
        aSAnim[10] := SubStr(aSAnim[10],1,nSizeP2-1)
        IF (SubStr(aSAnim[10],-1)==";")
            aSAnim[10] := SubStr(aSAnim[10],1,Len(aSAnim[10])-1)
        EndIF

        aSAnim[11] := Replicate("N;A;L;D;O;;D;J;;",nSizeP2-1)
        aSAnim[11] := SubStr(aSAnim[11],1,nSizeP2-1)
        IF (SubStr(aSAnim[11],-1)==";")
            aSAnim[11] := SubStr(aSAnim[11],1,Len(aSAnim[11])-1)
        EndIF

        aSAnim[12] := Replicate(Chr(175)+";",nSizeP2-1)
        aSAnim[12] := SubStr(aSAnim[12],1,nSizeP2-1)
        IF (SubStr(aSAnim[12],-1)==";")
            aSAnim[12] := SubStr(aSAnim[12],1,Len(aSAnim[12])-1)
        EndIF

        aSAnim[13] := Replicate(Chr(254)+";",nSizeP2-1)
        aSAnim[13] := SubStr(aSAnim[13],1,nSizeP2-1)
        IF (SubStr(aSAnim[13],-1)==";")
            aSAnim[13] := SubStr(aSAnim[13],1,Len(aSAnim[13])-1)
        EndIF

        aSAnim[14] := Replicate(Chr(221)+";"+Chr(222)+";",nSizeP2-1)
        aSAnim[14] := SubStr(aSAnim[14],1,nSizeP2-1)
        IF (SubStr(aSAnim[14],-1)==";")
            aSAnim[14] := SubStr(aSAnim[14],1,Len(aSAnim[14])-1)
        EndIF

        aSAnim[15] := Replicate(Chr(223)+";;",nSizeP2-1)
        aSAnim[15] := SubStr(aSAnim[15],1,nSizeP2-1)
        IF (SubStr(aSAnim[15],-1)==";")
            aSAnim[15] := SubStr(aSAnim[15],1,Len(aSAnim[15])-1)
        EndIF

        aSAnim[16] := Replicate(Chr(176)+";;"+Chr(177)+";;"+Chr(178)+";;",nSizeP2-1)
        aSAnim[16] := SubStr(aSAnim[16],1,nSizeP2-1)
        IF (SubStr(aSAnim[16],-1)==";")
            aSAnim[16] := SubStr(aSAnim[16],1,Len(aSAnim[16])-1)
        EndIF

        aSAnim[17] := Replicate(Chr(7)+";;",nSizeP2-1)
        aSAnim[17] := SubStr(aSAnim[17],1,nSizeP2-1)
        IF (SubStr(aSAnim[17],-1)==";")
            aSAnim[17] := SubStr(aSAnim[17],1,Len(aSAnim[17])-1)
        EndIF

        aSAnim[18] := Replicate("-;;\;;|;;/;;",nSizeP2-1)
        aSAnim[18] := SubStr(aSAnim[18],1,nSizeP2-1)
        IF (SubStr(aSAnim[18],-1)==";")
            aSAnim[18] := SubStr(aSAnim[18],1,Len(aSAnim[18])-1)
        EndIF

        aSAnim[19] := Replicate(Chr(8)+";;",nSizeP2-1)
        aSAnim[19] := SubStr(aSAnim[19],1,nSizeP2-1)
        IF (SubStr(aSAnim[19],-1)==";")
            aSAnim[19] := SubStr(aSAnim[19],1,Len(aSAnim[19])-1)
        EndIF

        aSAnim[20] := Replicate("*;;",nSizeP2-1)
        aSAnim[20] := SubStr(aSAnim[20],1,nSizeP2-1)
        IF (SubStr(aSAnim[20],-1)==";")
            aSAnim[20] := SubStr(aSAnim[20],1,Len(aSAnim[20])-1)
        EndIF

        aSAnim[21] := Replicate(".;;",nSizeP2-1)
        aSAnim[21] := SubStr(aSAnim[21],1,nSizeP2-1)
        IF (SubStr(aSAnim[21],-1)==";")
            aSAnim[21] := SubStr(aSAnim[21],1,Len(aSAnim[21])-1)
        EndIF

        aSAnim[22] := Replicate(":);;",nSizeP3-1)
        aSAnim[22] := SubStr(aSAnim[22],1,nSizeP3-1)
        IF (SubStr(aSAnim[22],-1)==";")
            aSAnim[22] := SubStr(aSAnim[22],1,Len(aSAnim[22])-1)
        EndIF

        aSAnim[23] := Replicate(">;;",nSizeP2-1)
        aSAnim[23] := SubStr(aSAnim[23],1,nSizeP2-1)
        IF (SubStr(aSAnim[23],-1)==";")
            aSAnim[23] := SubStr(aSAnim[23],1,Len(aSAnim[23])-1)
        EndIF

        aSAnim[24] := Replicate(Chr(175)+";;",nSizeP2-1)
        aSAnim[24] := SubStr(aSAnim[24],1,nSizeP2-1)
        IF (SubStr(aSAnim[24],-1)==";")
            aSAnim[24] := SubStr(aSAnim[24],1,Len(aSAnim[24])-1)
        EndIF

        aSAnim[25] := Replicate(Chr(254)+";;",nSizeP2-1)
        aSAnim[25] := SubStr(aSAnim[25],1,nSizeP2-1)
        IF (SubStr(aSAnim[25],-1)==";")
            aSAnim[25] := SubStr(aSAnim[25],1,Len(aSAnim[25])-1)
        EndIF

        aSAnim[26] := Replicate(Chr(221)+";;"+Chr(222)+";;",nSizeP2-1)
        aSAnim[26] := SubStr(aSAnim[26],1,nSizeP2-1)
        IF (SubStr(aSAnim[26],-1)==";")
            aSAnim[26] := SubStr(aSAnim[26],1,Len(aSAnim[26])-1)
        EndIF

        aSAnim[27] := Replicate(Chr(223)+";",nSizeP2-1)
        aSAnim[27] := SubStr(aSAnim[27],1,nSizeP2-1)
        IF (SubStr(aSAnim[27],-1)==";")
            aSAnim[27] := SubStr(aSAnim[27],1,Len(aSAnim[27])-1)
        EndIF

        aSAnim[28] := Replicate(Chr(176)+";"+Chr(177)+";"+Chr(178)+";",nSizeP2-1)
        aSAnim[28] := SubStr(aSAnim[28],1,nSizeP2-1)
        IF (SubStr(aSAnim[28],-1)==";")
            aSAnim[28] := SubStr(aSAnim[28],1,Len(aSAnim[28])-1)
        EndIF

        IF (lRandom)
            nSAnim := abs(HB_RandomInt(1,nLenA))
            aAdd(aRdnAn,nSAnim)
            nProgress := abs(HB_RandomInt(1,nLenP))
            aAdd(aRdnPG,nProgress)
        EndIF

        oProgress2:SetProgress(aSAnim[nSAnim])
        cProgress := aProgress2[nProgress]

        While !(__lKillProgress)

            DispOutAT(3,nCol,oProgress1:Eval(),"r+/n")

            IF (oProgress2:GetnProgress()==oProgress2:GetnMax())
                lChange := (!("SHUTTLE"$cProgress).OR.(("SHUTTLE"$cProgress).AND.(++nChange>1)))
                IF (lChange)
                    IF ("SHUTTLE"$cProgress)
                        nChange := 0
                    EndIF
                    IF (lRandom)
                        IF (Len(aRdnAn)==nLenA)
                            aSize(aRdnAn,0)
                        EndIF
                        While (aScan(aRdnAn,{|r|r==(nSAnim:=abs(HB_RandomInt(1,nLenA)))})>0)
                            __tbnSleep(nSLEEP)
                        end
                        aAdd(aRdnAn,nSAnim)
                        oProgress2:SetProgress(aSAnim[nSAnim])
                        IF (Len(aRdnPG)==nLenP)
                            aSize(aRdnPG,0)
                        EndIF
                        While (aScan(aRdnPG,{|r|r==(nProgress:=abs(HB_RandomInt(1,nLenP)))})>0)
                            __tbnSleep(nSLEEP)
                        end
                        aAdd(aRdnPG,nProgress)
                    Else
                        IF (++nProgress>nLenP)
                            nProgress := 1
                            IF (++nSAnim>nLenA)
                                nSAnim := 1
                            EndIF
                            oProgress2:SetProgress(aSAnim[nSAnim])
                        EndIF
                    EndIF
                    lCScreen := .T.
                    cProgress := aProgress2[nProgress]
                EndIF
            EndIF

            oProgress2:SetRandom(lPRandom)

            IF (lCScreen)
                lCScreen := .F.
                Scroll( 12, 0, 12, nMaxCol ) ; SetPos( 12, 0 )
            EndIF

            cStuff := PADC("["+cProgress+"] ["+oProgress2:Eval(cProgress)+"] ["+cProgress+"]",nMaxCol)
            nAT := (AT("] [",cStuff)+3)
            nQT := (AT("] [",SubSTr(cStuff,nAT))-2)
            cAT := SubStr(cStuff,nAT,nQT+1)
            cStuff := Stuff(cStuff,nAT,Len(cAT),Space(Len(cAT)))

            DispOutAT(12,0,cStuff,"w+/n")
            DispOutAT(12,nAT-1,cAT,"r+/n")

            IF hb_mutexLock(__phMutex)
                IF (cRTime==cLRTime)
                    __oRTimeProc:Calcule(.F.)
                EndIF
                cRTime := "["+hb_ntos(__oRTimeProc:GetnProgress())
                cRTime += "/"+hb_ntos(__oRTimeProc:GetnTotal())+"]"
                cRTime += "["+DtoC(__oRTimeProc:GetdEndTime())+"]"
                cRTime += "["+__oRTimeProc:GetcEndTime()+"]"
                cRTime += "["+__oRTimeProc:GetcMediumTime()+"]"
                cRTime += "["+hb_NtoS((__oRTimeProc:GetnProgress()/__oRTimeProc:GetnTotal())*100)+" %]"
                cLRTime := cRTime
                hb_mutexUnLock(__phMutex)
            EndIF

            Scroll( 07, 15, 07, nMaxCol ) ; SetPos( 07, 15 )
            DispOutAT(07,15,HB_TTOC(HB_DATETIME()),"r+/n")
            DispOutAT(07,nMaxCol-Len(cRTime),cRTime,"r+/n")

            __tbnSleep(nSLEEP)

        end

    Return
    Static Procedure ftProgress(nSLEEP,nMaxCol,nMaxRow)

        LOCAL aAnim := __SetType("aAnim","ARRAY",GetBigNAnim(),,)

        LOCAL cRow := __SetType("cRow","CHARACTER",,,)
        LOCAL cAnim := __SetType("cAnim","CHARACTER",,,)
        LOCAL cRAnim := __SetType("cRAnim","CHARACTER",,,)

        LOCAL lBreak := __SetType("lBreak","LOGICAL",.F.,,)

        LOCAL nRow := __SetType("nRow","NUMBER",,,)
        LOCAL nRowC := __SetType("nRowC","NUMBER",,,)
        LOCAL nAnim := __SetType("nAnim","NUMBER",,,)
        LOCAL nAnimes := __SetType("nAnimes","NUMBER",Len(aAnim),,)
        LOCAL nRowAnim := __SetType("nRowAnim","NUMBER",(nMaxRow+2),,)

        MEMVAR __lKillProgress

        While !(__lKillProgress)

            For nAnim := 1 To nAnimes
                cAnim := aAnim[nAnim]
                FOR EACH cRow IN hb_aTokens(cAnim,"@")
                    lBreak := (";"$cRow)
                    IF (lBreak)
                        IF ((nRowC==0).AND. !(nRow==0))
                            nRowC := (nRowAnim+nRow)
                        EndIF
                        cRAnim := StrTran(cRow,";","")
                    EndIF
                    cRAnim := PadC(StrTran(cRow,";",""),nMaxCol)
                    DispOutAT(nRowAnim+nRow,0,cRAnim,IF(lBreak,"w+/n","r+/n"))
                    __tbnSleep(nSLEEP/2)
                    IF (lBreak)
                        nRow  := 0
                    Else
                        ++nRow
                    EndIF
                next
                Scroll( nRowAnim, 0, nRowC, nMaxCol ) ; SetPos( nRowAnim, 0 )
                __tbnSleep(nSLEEP)
                nRow  := 0
                nRowC := 0
            next

        end

    Return
    Static Procedure BuildScreen(fhLog,nMaxCol)
        Scroll() ; SetPos(0,0)
        __ConOut(fhLog,PadC("BlackTDN :: tBigNtst [http://www.blacktdn.com.br]",nMaxCol))
        __ConOut(fhLog,PadC("("+Version()+Build_Mode()+", "+OS()+")",nMaxCol))
    Return
    Static Function FreeObj(oObj)
        oObj := NIL
    Return(hb_gcAll(.T.))
#line 1 "D:\GitHub\tbigNumber\src\tBigNAnim.prg"
Static Function GetBigNAnim()
    Local aAnim := Array(0)
    aAdd(aAnim,aSwimming())
    aAdd(aAnim,aBasketball())
    aAdd(aAnim,aBicycling())
    aAdd(aAnim,aMararena())
Return(aAnim)
Static Function aSwimming()

    Local cAnim := ""
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="  O                                                                   @"
    cAnim+=" /|\   ___                                                            @"
    cAnim+="  |  _/ 1|                                                            @"
    cAnim+=" _|_/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="  O_                                                                  @"
    cAnim+=" /|_   ___                                                            @"
    cAnim+="  | \_/ 1|                                                            @"
    cAnim+=" _|_/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="    O_                                                                @"
    cAnim+="   /_  ___                                                            @"
    cAnim+="   / |/ 1|                                                            @"
    cAnim+=" _/_/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="     O_                                                               @"
    cAnim+="    /|_                                                               @"
    cAnim+="     | \__                                                            @"
    cAnim+="     |/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="        O_                                                            @"
    cAnim+="       /_                                                             @"
    cAnim+="      /_/_                                                            @"
    cAnim+="     // 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="        O                                                             @"
    cAnim+="       /|\                                                            @"
    cAnim+="        |                                                             @"
    cAnim+="       _|_                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="        O                                                             @"
    cAnim+="       /|\                                                            @"
    cAnim+="        |                                                             @"
    cAnim+="       _|_                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~~~^~^~^^^~^~^^~^~^~^~^~^^~^~^~^~^~^`         ;@"
    cAnim+="        O                                                             @"
    cAnim+="        |\                                                            @"
    cAnim+="        \                                                             @"
    cAnim+="       _/_                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~~^~~~^~^~^~^~~^^~^~^~^~^^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="         O                                                            @"
    cAnim+="        /\                                                            @"
    cAnim+="        \                                                             @"
    cAnim+="       _/_                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^~^^^~^~^^^~^^~^^~^^^~^~^~^~^~^~^^~^~^~^~~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="        __O                                                           @"
    cAnim+="        \ \                                                           @"
    cAnim+="       _/_                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="        _                                                             @"
    cAnim+="        \\O                                                           @"
    cAnim+="       _/_|                                                           @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^^^~^~^^~^~^~^^~^~^^~^~^~^^^~^~^~^~^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="        _                                                             @"
    cAnim+="        \\O                                                           @"
    cAnim+="       _/_|                                                           @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^^~^^~^~^^~^~^^~^~^^~^~^~^~^~^~^^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="          _                                                           @"
    cAnim+="         / \O                                                         @"
    cAnim+="       _/_  \                                                         @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="              __O                                                     @"
    cAnim+="           __/  \                                                     @"
    cAnim+="       ___ `                                                          @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^^~^~^~^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                  __O                                                 @"
    cAnim+="               __/  \                                                 @"
    cAnim+="       ___     `                                                      @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                ,______O                                              @"
    cAnim+="       ___             \                                              @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^^~^~^~^~^~^~^~^~^~^~~^~^~^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                    ,____                                             @"
    cAnim+="       ___               \O                                           @"
    cAnim+="     _/ 1|                \                                           @"
    cAnim+=" ___/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___             ,____                                          @"
    cAnim+="     _/ 1|                  \O                                        @"
    cAnim+=" ___/____|                  .\,                             .--._____ @"
    cAnim+="       jgs`~~^~^~^^~^~^~^~^^~^~^~^~^~^~^^^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|               ,_____                                       @"
    cAnim+=" ___/____|                    .\O.'                         .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                        '.                                  @"
    cAnim+=" ___/____|                      '.\ .'                      .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^~^~^~^^~^~^^~^^~^~^~^~^^~^~^~^~^^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                           '.  /\O                .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~~^~^~~~^~^~^~^~^^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                              '   /                         @"
    cAnim+=" ___/____|                             `,'  \O              .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                '      __                   @"
    cAnim+=" ___/____|                                .`'   /O          .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                    '.                      @"
    cAnim+=" ___/____|                                   `,. /\O        .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^~^~^~^^~^~^~^^~^^~^~^^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                      .'    /               @"
    cAnim+=" ___/____|                                      '.`   \O    .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^~^~^~^~^~~~^~~~^~^~^~~~^~^~^~^~~^~~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                         `'    __           @"
    cAnim+=" ___/____|                                         '.`  /O  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                             `'             @"
    cAnim+=" ___/____|                                            '.<<_'.--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^^^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                               .            @"
    cAnim+=" ___/____|                                              `.,`.--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                          O/\ `.' .--._____ @"
    cAnim+="       jgs`~~~^~^~^^~~^~^~^~^^~^~^~^^~^~^~^~~^~^~^~^^^~^^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                        \    .'             @"
    cAnim+=" ___/____|                                       O/   '.`   .--._____ @"
    cAnim+="       jgs`~~~^~^~^~~~^~^~^~^^~~~~^~^~^^~^^~^~~^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                   ___     .'               @"
    cAnim+=" ___/____|                                    O/   '..      .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                        `.                  @"
    cAnim+=" ___/____|                                 O/\  `.'         .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~^~^^~^~^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                               \    .                       @"
    cAnim+=" ___/____|                              O/   .,'            .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^^~^^~^^~^~^^~^~^^~^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                          ___   `.                          @"
    cAnim+=" ___/____|                           O/  `,'                .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                             .'                             @"
    cAnim+=" ___/____|                       O/\  .'.                   .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^^~^^~^^~^~^~^~^~^^~^~^^~^~^~^^^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                      \   `.                                @"
    cAnim+=" ___/____|                     O/  `.'                      .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^~^^~^~^~^~^^~^^~^^~^~^^~^^~^^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                 ___  .                                     @"
    cAnim+=" ___/____|                  O/   ,'                         .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^^~^^~^~^^~^^~^^~^~^~^^~^~^^~^~^~^~~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                     .                                      @"
    cAnim+=" ___/____|               O/\ `.'                            .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|             \   `.                                         @"
    cAnim+=" ___/____|            O/   .'                               .--._____ @"
    cAnim+="       jgs`~^~^~^~^^~^~^~^^~^~^~^^^^~^~^~^~^~^~~^~~~~^~^~~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|        ___    .                                            @"
    cAnim+=" ___/____|         O/   '.`                                 .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^~^^~^~^~^^^~^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|             .`                                             @"
    cAnim+=" ___/____|      O/\   '.,                                   .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|    \    ,                                                  @"
    cAnim+=" ___/____|   O/   `.'                                       .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1| __  ,                                                      @"
    cAnim+=" ___/____| O/   .'`                                         .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^^~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~^~~^~^^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|.` .                                                        @"
    cAnim+=" ___/____|_>>.                                              .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^^^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1| .                                                          @"
    cAnim+=" ___/____|`.,`                                              .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|   .                                                        @"
    cAnim+=" ___/____| '.  /\O                                          .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~~^~^~~~^~^~^~^~^^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|     '   /                                                  @"
    cAnim+=" ___/____|    `,'  \O                                       .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|      '      __                                             @"
    cAnim+=" ___/____|      .`'   /O                                    .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|        '.  /\O                                   .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~~^~^~~~^~^~^~^~^^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|             '   /                                          @"
    cAnim+=" ___/____|            `,'  \O                               .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|              '      __                                     @"
    cAnim+=" ___/____|              .`'   /O                            .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                  '.  /\O                         .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~~^~^~~~^~^~^~^~^^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                      '   /                                 @"
    cAnim+=" ___/____|                     `,'  \O                      .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                        '      __                           @"
    cAnim+=" ___/____|                        .`'   /O                  .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                           '.  /\O                .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~~^~^~~~^~^~^~^~^^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                              '   /                         @"
    cAnim+=" ___/____|                             `,'  \O              .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                '      __                   @"
    cAnim+=" ___/____|                                .`'   /O          .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                    '.                      @"
    cAnim+=" ___/____|                                   `,. /\O        .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^~^~^~^^~^~^~^^~^^~^~^^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                      .'    /               @"
    cAnim+=" ___/____|                                      '.`   \O    .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^~^~^~^~^~~~^~~~^~^~^~~~^~^~^~^~~^~~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                         `'    __           @"
    cAnim+=" ___/____|                                         '.`  /O  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                             `'             @"
    cAnim+=" ___/____|                                            '.<<_'.--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^^^~^~^~^~^^~^~^~^~^~^~^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                               .            @"
    cAnim+=" ___/____|                                              `.,`.--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|                                          O/\ `.' .--._____ @"
    cAnim+="       jgs`~~~^~^~^^~~^~^~^~^^~^~^~^^~^~^~^~~^~^~^~^^^~^^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                        \    .'             @"
    cAnim+=" ___/____|                                       O/   '.`   .--._____ @"
    cAnim+="       jgs`~~~^~^~^~~~^~^~^~^^~~~~^~^~^^~^^~^~~^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                   ___     .'               @"
    cAnim+=" ___/____|                                    O/   '..      .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                        `.                  @"
    cAnim+=" ___/____|                                 O/\  `.'         .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~^~^^~^~^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                               \    .                       @"
    cAnim+=" ___/____|                              O/   .,'            .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^^~^^~^^~^~^^~^~^^~^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                          ___   `.                          @"
    cAnim+=" ___/____|                           O/  `,'                .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                             .'                             @"
    cAnim+=" ___/____|                       O/\  .'.                   .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^^~^^~^^~^~^~^~^~^^~^~^^~^~^~^^^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                      \   `.                                @"
    cAnim+=" ___/____|                     O/  `.'                      .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^~^^~^~^~^~^^~^^~^^~^~^^~^^~^^~^~^^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                 ___  .                                     @"
    cAnim+=" ___/____|                  O/   ,'                         .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^^~^^~^^~^~^^~^^~^^~^~^~^^~^~^^~^~^~^~~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                     .                                      @"
    cAnim+=" ___/____|               O/\ `.'                            .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|             \   `.                                         @"
    cAnim+=" ___/____|            O/   .'                               .--._____ @"
    cAnim+="       jgs`~^~^~^~^^~^~^~^^~^~^~^^^^~^~^~^~^~^~~^~~~~^~^~~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|        ___    .                                            @"
    cAnim+=" ___/____|         O/   '.`                                 .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^~^^~^~^~^^^~^~^~^~^~^~^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|             .`                                             @"
    cAnim+=" ___/____|      O/\   '.,                                   .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|    \    ,                                                  @"
    cAnim+=" ___/____|   O/   `.'                                       .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1| __  ,                                                      @"
    cAnim+=" ___/____| O/   .'`                                         .--._____ @"
    cAnim+="       jgs`~~^~^~^~^^^~^~^~^~^~^~^~^~^~^~^^~^~^~^~^~^~~^~^^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/____|O.'                                               .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1|                                                            @"
    cAnim+=" ___/___/\O.'                                               .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       ___                                                            @"
    cAnim+="     _/ 1O                                                            @"
    cAnim+=" ___/___/|\                                                 .--._____ @"
    cAnim+="       jgs`~~^~^~^~~^~^~^^^~^^~^~~^~^^~^~^~^^~^~^~^^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       O__                                                            @"
    cAnim+="     _//\                                                             @"
    cAnim+=" ___/__<<|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^^~^~^~^~~^~^~^~^^~^^^~^^~^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       _O                                                             @"
    cAnim+="       _|\                                                            @"
    cAnim+="     _//||                                                            @"
    cAnim+=" ___/__\|                                                   .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       O                                                              @"
    cAnim+="      /|__                                                            @"
    cAnim+="     _/|\|                                                            @"
    cAnim+=" ___/__|_\                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^^~^~^~^~^^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="       O                                                              @"
    cAnim+="      /|__                                                            @"
    cAnim+="     _/|1|                                                            @"
    cAnim+=" ___/_||_|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^^^^~^~^~^~~^~^~^~^~^~^~~^`          ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="      O                                                               @"
    cAnim+="     /|___                                                            @"
    cAnim+="     /| 1|                                                            @"
    cAnim+=" ___|_\__|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~~~^~^^~~~^~^~~~^~^~^~^~~~^~~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="    O_                                                                @"
    cAnim+="   /|  ___                                                            @"
    cAnim+="   /|_/ 1|                                                            @"
    cAnim+=" __\|____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^~`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="    O_                                                                @"
    cAnim+="   /|  ___                                                            @"
    cAnim+="   /|_/ 1|                                                            @"
    cAnim+=" __\|____|                                                  .--._____ @"
    cAnim+="       jgs`~~^~^~^~^~^~^~^^~^~^~^~^~^^~^~^~^~^~^~^^~^~^~^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="  O_                                                                  @"
    cAnim+=" /|    ___                                                            @"
    cAnim+="  |  _/ 1|                                                            @"
    cAnim+=" _|\/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^~^~^~^~^~^~^~^~^~^^~^~^^~^^~~~^~^^~^~~^~^^~^`         ;@"
    cAnim+="                                                                      @"
    cAnim+="                                                                      @"
    cAnim+="  O                                                                   @"
    cAnim+=" /|\   ___                                                            @"
    cAnim+="  |  _/ 1|                                                            @"
    cAnim+=" _|_/____|                                                  .--._____ @"
    cAnim+="       jgs`~^~^^~^^~^~^~^^~^~^~^~^^~^~^~^~^^~^~^~^~^~^~^~^`          ;@"
Return(cAnim)
Static Function aBasketball()

    Local cAnim := ""
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="   o             |      @"
    cAnim+="   c> _o/        |      @"
    cAnim+="  /     \        |      @"
    cAnim+="  >>   / \       | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="   o             |      @"
    cAnim+="   c>  _o/       |      @"
    cAnim+="  /      )       |      @"
    cAnim+="  >>   <<        | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="   o             |      @"
    cAnim+="   c> _o/        |      @"
    cAnim+="  /     \        |      @"
    cAnim+="  >>   < \       | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="     o_o/        |      @"
    cAnim+="   c/   \        |      @"
    cAnim+="  /    < \       |      @"
    cAnim+="  >>             | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="      o   \%/ |--\      @"
    cAnim+="      _c/        |      @"
    cAnim+="  <c/   \        |      @"
    cAnim+="  /    < \       |      @"
    cAnim+="  >>             | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="        o \%/ |--\      @"
    cAnim+="       _c/       |      @"
    cAnim+="  <c/   (        |      @"
    cAnim+="  /    < \       |      @"
    cAnim+="  >>             | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="         o\%/ |--\      @"
    cAnim+="       \c/       |      @"
    cAnim+="  <c/   (        |      @"
    cAnim+="  /     >\       |      @"
    cAnim+="  >>             | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="       \c_o      |      @"
    cAnim+="  <c>   (        |      @"
    cAnim+="  /    / >       |      @"
    cAnim+="  >>             | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  <c_  \c_o      |      @"
    cAnim+="  /     )        |      @"
    cAnim+=" / >   < >       | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="         o       |      @"
    cAnim+="   \c/  <c>      |      @"
    cAnim+="   /     \       |      @"
    cAnim+="   >\   / \      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="         o\%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="   \c/  |c|      |      @"
    cAnim+="   /     \       |      @"
    cAnim+="   >>   / \      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="         o\%/ |--\      @"
    cAnim+="    \c/          |      @"
    cAnim+="    /   |c/      |      @"
    cAnim+="   / >   \       |      @"
    cAnim+="        / \      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          o___|         @"
    cAnim+="      \c/ \%/ |--\      @"
    cAnim+="      /          |      @"
    cAnim+="     / > c/      |      @"
    cAnim+="        <\       |      @"
    cAnim+="        / \      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="         o____|         @"
    cAnim+="      \c/ \%/ |--\      @"
    cAnim+="      /          |      @"
    cAnim+="      >\ c/      |      @"
    cAnim+="        <\       |      @"
    cAnim+="        / \      | Shanx@;@"
    cAnim+="       o                @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="    \c|          |      @"
    cAnim+="     |_  o       |      @"
    cAnim+="    /    |>      |      @"
    cAnim+="        < \      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="     o    ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="    \o| o        |      @"
    cAnim+="    /    \>      |      @"
    cAnim+="  < \   /<       | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="   o      \%/ |--\      @"
    cAnim+="       \o        |      @"
    cAnim+="  \o/   (>       |      @"
    cAnim+="   |   < \       |      @"
    cAnim+="  / \            | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="  o              |      @"
    cAnim+="  \o_ o/         |      @"
    cAnim+="   |  /\         |      @"
    cAnim+="  / \ / <        | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+=" _o/ _o          |      @"
    cAnim+=" o \  /\         |      @"
    cAnim+="  / \ < \        | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  c/ _o          |      @"
    cAnim+=" / \  /\         |      @"
    cAnim+=" o/ \ / \        | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+=" _c/ \o          |      @"
    cAnim+=" o \  /\         |      @"
    cAnim+="  / \ /<         | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  c/  o          |      @"
    cAnim+=" / \ /|          |      @"
    cAnim+=" o/ \/ \         | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+=" _c/ o           |      @"
    cAnim+=" o \ /\          |      @"
    cAnim+="  / \/ \         | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  c/  o          |      @"
    cAnim+=" / \ /|          |      @"
    cAnim+=" o/ \< \         | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+=" _c/o            |      @"
    cAnim+=" o \/\           |      @"
    cAnim+="  / X \          | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  c/o            |      @"
    cAnim+=" / \/\>          |      @"
    cAnim+=" o/ X \          | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+=" _c/o            |      @"
    cAnim+=" o \/)>          |      @"
    cAnim+="  / X<           | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="  o              |      @"
    cAnim+="  c>o|           |      @"
    cAnim+="   )/\           |      @"
    cAnim+="  / X \          | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="    o     \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="  c/ c           |      @"
    cAnim+="   ) |\          |      @"
    cAnim+="  / X >          | Shanx@;@"
    cAnim+="                        @"
    cAnim+="      o   ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="     \c_         |      @"
    cAnim+="  c/  |          |      @"
    cAnim+="   ) / >         |      @"
    cAnim+="  / \            | Shanx@;@"
    cAnim+="        o               @"
    cAnim+="          ____|         @"
    cAnim+="      \c_ \%/ |--\      @"
    cAnim+="       )__       |      @"
    cAnim+="  c/  /          |      @"
    cAnim+="   |             |      @"
    cAnim+="  / >            | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          _o__|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="      \c_        |      @"
    cAnim+="   \c/ )__       |      @"
    cAnim+="   /    /        |      @"
    cAnim+="  / >            | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          )%( |--\      @"
    cAnim+="      \c_        |      @"
    cAnim+="      / c/       |      @"
    cAnim+="     |> <\       |      @"
    cAnim+="        / >      | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="           o     |      @"
    cAnim+="     _c_  |c/    |      @"
    cAnim+="     /    /      |      @"
    cAnim+="    < >  > \     | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="     <c_ _c_o    |      @"
    cAnim+="     /    )      |      @"
    cAnim+="    / >  < \     | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="          o      |      @"
    cAnim+="    <c/  _c/     |      @"
    cAnim+="    /     (      |      @"
    cAnim+="    > >  / \     | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="      <c_o       |      @"
    cAnim+="      /  \o/     |      @"
    cAnim+="     />   |      |      @"
    cAnim+="         / \     | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="     o           |      @"
    cAnim+="    <c/  \o      |      @"
    cAnim+="     (    |>     |      @"
    cAnim+="     |\  < \     | Shanx@;@"
    cAnim+="                        @"
    cAnim+="          ____|         @"
    cAnim+="          \%/ |--\      @"
    cAnim+="                 |      @"
    cAnim+="   o_c/  o       |      @"
    cAnim+="     (   /\>     |      @"
    cAnim+="     <\  /<      | Shanx@;@"
    cAnim+=cAnim
Return(cAnim)
    Static Function aBicycling()

    Local cAnim := ""
    cAnim+="_________________________________________________________________@"
    cAnim+="                                                             //  @"
    cAnim+="                                                            //   @"
    cAnim+="                                                           //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                                             //  @"
    cAnim+="                                                            //   @"
    cAnim+=")                                                          //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                                             //  @"
    cAnim+="_                                                           //   @"
    cAnim+="_)                                                         //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="0                                                            //  @"
    cAnim+=",_                                                          //   @"
    cAnim+="(_)                                                        //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="_0                                                           //  @"
    cAnim+="<,_                                                         //   @"
    cAnim+=" (_)                                                       //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="__0                                                          //  @"
    cAnim+="\<,_                                                        //   @"
    cAnim+="/ (_)                                                      //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+=" __0                                                         //  @"
    cAnim+="-\<,_                                                       //   @"
    cAnim+=")| (_)                                                     //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="  __0                                                        //  @"
    cAnim+="_-\<,_                                                      //   @"
    cAnim+="_) \(_)                                                    //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="  __0                                                        // @"
    cAnim+="_-\<,_                                                      //   @"
    cAnim+="_)| (_)                                                    //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="   __0                                                       //  @"
    cAnim+=" _-\<,_                                                     //   @"
    cAnim+="(_)/ (_)                                                   //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="    __0                                                      //  @"
    cAnim+="  _-\<,_                                                    //   @"
    cAnim+=" (_)| (_)                                                  //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="     __0                                                     //  @"
    cAnim+="   _-\<,_                                                   //   @"
    cAnim+="  (_) \(_)                                                 //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="      __0                                                    //  @"
    cAnim+="    _-\<,_                                                  //   @"
    cAnim+="   (_)| (_)                                                //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="       __0                                                   //  @"
    cAnim+="     _-\<,_                                                 //   @"
    cAnim+="    (_)/ (_)                                               //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="        __0                                                  //  @"
    cAnim+="      _-\<,_                                                //   @"
    cAnim+="     (_)| (_)                                              //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="         __0                                                 //  @"
    cAnim+="       _-\<,_                                               //   @"
    cAnim+="      (_) \(_)                                             //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="          __0                                                //  @"
    cAnim+="        _-\<,_                                              //   @"
    cAnim+="       (_)| (_)                                            //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="           __0                                               //  @"
    cAnim+="         _-\<,_                                             //   @"
    cAnim+="        (_)/ (_)                                           //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="            __0                                              //  @"
    cAnim+="          _-\<,_                                            //   @"
    cAnim+="         (_)/ (_)                                          //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="             __0                                             //  @"
    cAnim+="           _-\<,_                                           //   @"
    cAnim+="          (_)| (_)                                         //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="              __0                                            //  @"
    cAnim+="            _-\<,_                                          //   @"
    cAnim+="           (_) \(_)                                        //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="               __0                                           //  @"
    cAnim+="             _-\<,_                                         //   @"
    cAnim+="            (_)| (_)                                       //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                __0                                          //  @"
    cAnim+="              _-\<,_                                        //   @"
    cAnim+="             (_)/ (_)                                      //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                 __0                                         //  @"
    cAnim+="               _-\<,_                                       //   @"
    cAnim+="              (_)| (_)                                     //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                  __0                                        //  @"
    cAnim+="                _-\<,_                                      //   @"
    cAnim+="               (_) \(_)                                    //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                   __0                                       //  @"
    cAnim+="                 _-\<,_                                     //   @"
    cAnim+="                (_)| (_)                                   //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                    __0                                      //  @"
    cAnim+="                  _-\<,_                                    //   @"
    cAnim+="                 (_)/ (_)                                  //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                     __0                                     //  @"
    cAnim+="                   _-\<,_                                   //   @"
    cAnim+="                  (_)| (_)                                 //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                      __0                                    //  @"
    cAnim+="                    _-\<,_                                  //   @"
    cAnim+="                   (_) \(_)                                //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                       __0                                   //  @"
    cAnim+="                     _-\<,_                                 //   @"
    cAnim+="                    (_)| (_)                               //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                        __0                                  //  @"
    cAnim+="                      _-\<,_                                //   @"
    cAnim+="                     (_)/ (_)                              //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                         __0                                 //  @"
    cAnim+="                       _-\<,_                               //   @"
    cAnim+="                      (_)| (_)                             //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                          __0                                //  @"
    cAnim+="                        _-\<,_                              //   @"
    cAnim+="                       (_) \(_)                            //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                           __0                               //  @"
    cAnim+="                         _-\<,_                             //   @"
    cAnim+="                        (_)| (_)                           //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                           __0                               //  @"
    cAnim+="                         _-\<,_                             //   @"
    cAnim+="                        (_)/ (_)                           //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                            __0                              //  @"
    cAnim+="                          _-\<,_                            //   @"
    cAnim+="                         (_)| (_)                          //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                             __0                             //  @"
    cAnim+="                           _-\<,_                           //   @"
    cAnim+="                          (_) \(_)                         //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                              __0                            //  @"
    cAnim+="                            _-\<,_                          //   @"
    cAnim+="                           (_)| (_)                        //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                               __0                           //  @"
    cAnim+="                             _-\<,_                         //   @"
    cAnim+="                            (_)/ (_)                       //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                __0                          //  @"
    cAnim+="                              _-\<,_                        //   @"
    cAnim+="                             (_)| (_)                      //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                 __0                         //  @"
    cAnim+="                               _-\<,_                       //   @"
    cAnim+="                              (_) \(_)                     //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                  __0                        //  @"
    cAnim+="                                _-\<,_                      //   @"
    cAnim+="                               (_)| (_)                    //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                   __0                       //  @"
    cAnim+="                                 _-\<,_                     //   @"
    cAnim+="                                (_)/ (_)                   //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                    __0                      //  @"
    cAnim+="                                  _-\<,_                    //   @"
    cAnim+="                                 (_)| (_)                  //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="                                     __0                     //  @"
    cAnim+="                                   _-\<,_                   //   @"
    cAnim+=")                                 (_) \(_)                 //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="_0                                    __0                    //  @"
    cAnim+="<,_                                 _-\<,_                  //   @"
    cAnim+="\(_)                               (_)| (_)                //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="  __0                                  __0                   //  @"
    cAnim+="_-\<,_                               _-\<,_                 //   @"
    cAnim+="_)| (_)                             (_)/ (_)               //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="     __0                                __0                  //  @"
    cAnim+="   _-\<,_                             _-\<,_                //   @"
    cAnim+="  (_)/ (_)                           (_)| (_)              //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="        __0                              __0                 //  @"
    cAnim+="      _-\<,_                           _-\<,_               //   @"
    cAnim+="     (_)| (_)                         (_) \(_)             //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="           __0                            __0                //  @"
    cAnim+="         _-\<,_                         _-\<,_              //   @"
    cAnim+="        (_) \(_)                       (_)| (_)            //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
    cAnim+="_________________________________________________________________@"
    cAnim+="              __0                          __0               //  @"
    cAnim+="            _-\<,_                       _-\<,_             //   @"
    cAnim+="           (_)| (_)                     (_)/ (_)           //    @"
    cAnim+="__________________________________________________________//Shanx@;@"
Return(cAnim)
Static Function aMararena()

    Local cAnim := ""
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="  .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.  @"
    cAnim+="   /\     /\     /\     /\     /\     /\     /\     /\     /\     /\     /\  @;@"
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="  \|.    \|.    \|.    \|.    \|.    \|.    \|.    \|.    \|.    \|.    \|.  @"
    cAnim+="   >\     >\     >\     >\     >\     >\     >\     >\     >\     >\     >\  @;@"
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="  \|/    \|/    \|/    \|/    \|/    \|/    \|/    \|/    \|/    \|/    \|/  @"
    cAnim+="  /<     /<     /<     /<     /<     /<     /<     /<     /<     /<     /<   @;@"
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="   //     //     //     //     //     //     //     //     //     //     //  @"
    cAnim+="   >\     >\     >\     >\     >\     >\     >\     >\     >\     >\     >\  @;@"
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="   X      X      X      X      X      X      X      X      X      X      X   @"
    cAnim+="  /<     /<     /<     /<     /<     /<     /<     /<     /<     /<     /<   @;@"
    cAnim+="                                                                             @"
    cAnim+="  <o     <o     <o     <o     <o     <o     <o     <o     <o     <o     <o   @"
    cAnim+="   \      \      \      \      \      \      \      \      \      \      \   @"
    cAnim+="   >\     >\     >\     >\     >\     >\     >\     >\     >\     >\     >\  @;@"
    cAnim+="                                                                             @"
    cAnim+="  <o>    <o>    <o>    <o>    <o>    <o>    <o>    <o>    <o>    <o>    <o>  @"
    cAnim+="   |      |      |      |      |      |      |      |      |      |      |   @"
    cAnim+="  /<     /<     /<     /<     /<     /<     /<     /<     /<     /<     /<   @;@"
    cAnim+="                                                                             @"
    cAnim+="   o>     o>     o>     o>     o>     o>     o>     o>     o>     o>     o>  @"
    cAnim+="  <|     <|     <|     <|     <|     <|     <|     <|     <|     <|     <|   @"
    cAnim+="   >\     >\     >\     >\     >\     >\     >\     >\     >\     >\     >\  @;@"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="  .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.    .|.  @"
    cAnim+="   >>     >>     >>     >>     >>     >>     >>     >>     >>     >>     >>  @;@"
    cAnim+="                                                                             @"
    cAnim+="   o      o      o      o      o      o      o      o      o      o      o   @"
    cAnim+="  <|>    <|>    <|>    <|>    <|>    <|>    <|>    <|>    <|>    <|>    <|>  @"
    cAnim+="  /<     /<     /<     /<     /<     /<     /<     /<     /<     /<     /<   @;@"
    cAnim+=cAnim
    cAnim+=cAnim
Return(cAnim)
#line 964 "D:\GitHub\tbigNumber\src\tBigNtst.prg"
static procedure tBigNTst01(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog,"")

    __ConOut(fhLog," BEGIN ------------ Teste MOD 0 -------------- ")


    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        cX := hb_ntos(x)
        __oRTime2:SetRemaining(Int(nN_TEST/nISQRT))
        For n := nN_TEST To 1 Step -nISQRT
            cN := hb_ntos(n)
            cW := otBigN:SetValue(cX):MOD(cN):ExactValue()
            __ConOut(fhLog,cX+":tBigNumber():MOD("+cN+")","RESULT: "+cW)
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste MOD 0 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst02(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif


        __ConOut(fhLog," BEGIN ------------ Teste Operator Overloading 0 -------------- ")

        otBigN:SetDecimals(nACC_SET)
        otBigN:nthRootAcc(nROOT_ACC_SET)
        otBigN:SysSQRT(0)

        otBigW:SetDecimals(nACC_SET)
        otBigW:nthRootAcc(nROOT_ACC_SET)
        otBigW:SysSQRT(0)

        Set(3,8)


        __oRTime1:SetRemaining(5+1)
        For w := 0 To 5
            cW := hb_ntos(w)
            otBigW       := cW
            __ConOut(fhLog,"otBigW:="+cW ,"RESULT: "+otBigW:ExactValue())
            __ConOut(fhLog,"otBigW=="+cW ,"RESULT: "+cValToChar(otBigW==cW))
            __oRTime2:SetRemaining(Int(nISQRT/2))
            For n := 1 To nISQRT Step Int(nISQRT/2)
                cN := hb_ntos(n)
                __ConOut(fhLog,"otBigW=="+cN ,"RESULT: "+cValToChar(otBigW==cN))
            __ConOut(fhLog,"otBigW%="+cW ,"RESULT: "+(otBigX:=(otBigW%=cW),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW^="+cN ,"RESULT: "+(otBigX:=(otBigW^=cN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+="+cN ,"RESULT: "+(otBigX:=(otBigW+=cN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW++"    ,"RESULT: "+(otBigX:=(otBigW++),otBigX:ExactValue()))
                __ConOut(fhLog,"++otBigW"    ,"RESULT: "+(otBigX:=(++otBigW),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW-="+cN ,"RESULT: "+(otBigX:=(otBigW-=cN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+="+cW ,"RESULT: "+(otBigX:=(otBigW+=cW),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW*="+cN ,"RESULT: "+(otBigX:=(otBigW*=cN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+="+cW ,"RESULT: "+(otBigX:=(otBigW+=cW),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW++"    ,"RESULT: "+(otBigX:=(otBigW++),otBigX:ExactValue()))
                __ConOut(fhLog,"++otBigW"    ,"RESULT: "+(otBigX:=(++otBigW),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW--"    ,"RESULT: "+(otBigX:=(otBigW--),otBigX:ExactValue()))
                __ConOut(fhLog,"--otBigW"    ,"RESULT: "+(otBigX:=(--otBigW),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW=="+cN ,"RESULT: "+cValToChar(otBigW==cN))
                __ConOut(fhLog,"otBigW>"+cN  ,"RESULT: "+cValToChar(otBigW>cN))
                __ConOut(fhLog,"otBigW<"+cN  ,"RESULT: "+cValToChar(otBigW<cN))
                __ConOut(fhLog,"otBigW>="+cN ,"RESULT: "+cValToChar(otBigW>=cN))
                __ConOut(fhLog,"otBigW<="+cN ,"RESULT: "+cValToChar(otBigW<=cN))
                __ConOut(fhLog,"otBigW!="+cN ,"RESULT: "+cValToChar(otBigW<>cN))
                __ConOut(fhLog,"otBigW#"+cN  ,"RESULT: "+cValToChar(otBigW#cN))
                __ConOut(fhLog,"otBigW<>"+cN ,"RESULT: "+cValToChar(otBigW<>cN))
                __ConOut(fhLog,"otBigW+"+cN  ,"RESULT: "+(otBigX:=(otBigW+cN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW-"+cN  ,"RESULT: "+(otBigX:=(otBigW-cN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW*"+cN  ,"RESULT: "+(otBigX:=(otBigW*cN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW/"+cN  ,"RESULT: "+(otBigX:=(otBigW/cN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW%"+cN  ,"RESULT: "+(otBigX:=(otBigW%cN),otBigX:ExactValue()))
                __ConOut(fhLog,__cSep)
                otBigN := otBigW
                __ConOut(fhLog,"otBigN:=otBigW"   ,"RESULT: "+otBigN:ExactValue())
                __ConOut(fhLog,"otBigN"           ,"RESULT: "+otBigW:ExactValue())
                __ConOut(fhLog,"otBigW"           ,"RESULT: "+otBigW:ExactValue())
                __ConOut(fhLog,"otBigW==otBigN"   ,"RESULT: "+cValToChar(otBigW==otBigN))
                __ConOut(fhLog,"otBigW>otBigN"    ,"RESULT: "+cValToChar(otBigW>otBigN))
                __ConOut(fhLog,"otBigW<otBigN"    ,"RESULT: "+cValToChar(otBigW<otBigN))
                __ConOut(fhLog,"otBigW>=otBigN"   ,"RESULT: "+cValToChar(otBigW>=otBigN))
                __ConOut(fhLog,"otBigW<=otBigN"   ,"RESULT: "+cValToChar(otBigW<=otBigN))
                __ConOut(fhLog,"otBigW!=otBigN"   ,"RESULT: "+cValToChar(otBigW<>otBigN))
                __ConOut(fhLog,"otBigW#otBigN"    ,"RESULT: "+cValToChar(otBigW#otBigN))
                __ConOut(fhLog,"otBigW<>otBigN"   ,"RESULT: "+cValToChar(otBigW<>otBigN))
                __ConOut(fhLog,"otBigW+otBigN"    ,"RESULT: "+(otBigX:=(otBigW+otBigN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW-otBigN"    ,"RESULT: "+(otBigX:=(otBigW-otBigN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW*otBigN"    ,"RESULT: "+(otBigX:=(otBigW*otBigN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW/otBigN"    ,"RESULT: "+(otBigX:=(otBigW/otBigN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW%otBigN"    ,"RESULT: "+(otBigX:=(otBigW%otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=otBigN"   ,"RESULT: "+(otBigX:=(otBigW+=otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=otBigN++" ,"RESULT: "+(otBigX:=(otBigW+=otBigN++),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=++otBigN" ,"RESULT: "+(otBigX:=(otBigW+= ++otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW-=otBigN"   ,"RESULT: "+(otBigX:=(otBigW-=otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=otBigN"   ,"RESULT: "+(otBigX:=(otBigW+=otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW*=otBigN"   ,"RESULT: "+(otBigX:=(otBigW*=otBigN),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=otBigN"   ,"RESULT: "+(otBigX:=(otBigW+=otBigN),otBigX:ExactValue()))
                otBigN := cW
                __ConOut(fhLog,"otBigN:="+cW ,"RESULT: "+otBigN:ExactValue())
                __ConOut(fhLog,"otBigN=="+cW ,"RESULT: "+cValToChar(otBigN==cW))
            __ConOut(fhLog,"otBigN^=otBigN"   ,"RESULT: "+(otBigX:=(otBigN^=otBigN),otBigX:ExactValue()))
                __ConOut(fhLog,"otBigW--"         ,"RESULT: "+(otBigX:=(otBigW--),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=otBigN--" ,"RESULT: "+(otBigX:=(otBigW+=otBigN--),otBigX:ExactValue()))
            __ConOut(fhLog,"otBigW+=--otBigN" ,"RESULT: "+(otBigX:=(otBigW+= --otBigN),otBigX:ExactValue()))
                __oRTime2:Calcule()
                __oRTime1:Calcule(.F.)
                __ConOut(fhLog,__cSep)
                __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
                __ConOut(fhLog,__cSep)
            next
            __oRTime1:Calcule()
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        otBigX := NIL
        hb_gcAll(.T.)
        __ConOut(fhLog," ------------ Teste Operator Overloading 0 -------------- END ")


return

static procedure tBigNTst03(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o0 := __SetType("o0","OBJECT",tBigNumber():New("0"),"TBIGNUMBER",)
    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL aPFact := __SetType("aPFact","ARRAY",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog,"")

    __ConOut(fhLog," BEGIN ------------ Teste Prime 0 -------------- ")


    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For n := 1 To nN_TEST STEP nISQRT
        cN := hb_ntos(n)
        aPFact := otBigN:SetValue(cN):PFactors()
        __oRTime2:SetRemaining(Len(aPFact))
        For x := 1 To Len(aPFact)
            cW := aPFact[x][2]

            otBigW := cW
            While otBigW > o0




                otBigW:SetValue(otBigW:Sub(o1))
                __ConOut(fhLog,cN+":tBigNumber():PFactors()","RESULT: "+aPFact[x][1])
            end
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
        next
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    aSize(aPFact,0)
    aPFact := NIL

        hb_gcAll(.T.)


    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Prime 0 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst04(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)








    LOCAL aPrimes := __SetType("aPrimes","ARRAY",{ "15485783",  "15485801",  "15485807",  "15485837",  "15485843",  "15485849",  "15485857",  "15485863", "15487403",  "15487429",  "15487457",  "15487469",  "15487471",  "15487517",  "15487531",  "15487541", "32458051",  "32458057",  "32458073",  "32458079",  "32458091",  "32458093",  "32458109",  "32458123", "49981171",  "49981199",  "49981219",  "49981237",  "49981247",  "49981249",  "49981259",  "49981271", "67874921",  "67874959",  "67874969",  "67874987",  "67875007",  "67875019",  "67875029",  "67875061", "982451501", "982451549", "982451567", "982451579", "982451581", "982451609", "982451629", "982451653" },,)

    LOCAL oPrime := __SetType("oPrime","OBJECT",tPrime():New(),"TPRIME",)


    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste Prime 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    oPrime:IsPReset()
    oPrime:NextPReset()

    __oRTime1:SetRemaining(Len(aPrimes))
    For n := 1 To Len(aPrimes)
        __oRTime2:SetRemaining(1)
        cN := PadL( aPrimes[n] , oPrime:nSize )
        __ConOut(fhLog,"tPrime():NextPrime("+cN+")","RESULT: "+cValToChar(oPrime:NextPrime(cN)))
        __ConOut(fhLog,"tPrime():NextPrime("+cN+")","RESULT: "+oPrime:cPrime)
        __ConOut(fhLog,"tPrime():IsPrime("+oPrime:cPrime+")","RESULT: "+cValToChar(oPrime:IsPrime()))
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    aSize(aPrimes,0)
    aPrimes := NIL

        hb_gcAll(.T.)


    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Prime 1 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst05(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL otBH16 := __SetType("otBH16","OBJECT",tBigNumber():New(NIL,16),"TBIGNUMBER",)
    LOCAL otBBin := __SetType("otBBin","OBJECT",tBigNumber():New(NIL,2),"TBIGNUMBER",)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste HEX16 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(((nISQRT*99)/99)+1)
    For x := 0 TO (nISQRT*99) STEP 99
        __oRTime2:SetRemaining(1)
        n := x
        cN := hb_ntos(n)
        cHex := otBigN:SetValue(cN):D2H("16"):Int()
        __ConOut(fhLog,cN+":tBigNumber():D2H(16)","RESULT: "+cHex)
        cN := otBH16:SetValue(cHex):H2D():Int()
        __ConOut(fhLog,cHex+":tBigNumber():H2D()","RESULT: "+cN)
        __ConOut(fhLog,cN+"=="+hb_ntos(n),"RESULT: "+cValToChar(cN==hb_ntos(n)))
        cN := otBH16:H2B():Int()
        __ConOut(fhLog,cHex+":tBigNumber():H2B()","RESULT: "+cN)
        cHex := otBBin:SetValue(cN):B2H("16"):Int()
        __ConOut(fhLog,cN+":tBigNumber():B2H(16)","RESULT: "+cHex)
        __ConOut(fhLog,__cSep)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    otBH16  := FreeObj(otBH16)

    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste HEX16 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst06(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL otBH32 := __SetType("otBH32","OBJECT",tBigNumber():New(NIL,32),"TBIGNUMBER",)
    LOCAL otBBin := __SetType("otBBin","OBJECT",tBigNumber():New(NIL,2),"TBIGNUMBER",)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste HEX32 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(((nISQRT*99)/99)+1)
    For x := 0 TO (nISQRT*99) STEP 99
        __oRTime2:SetRemaining(1)
        n := x
        cN := hb_ntos(n)
        cHex := otBigN:SetValue(cN):D2H("32"):Int()
        __ConOut(fhLog,cN+":tBigNumber():D2H(32)","RESULT: "+cHex)
        cN := otBH32:SetValue(cHex):H2D("32"):Int()
        __ConOut(fhLog,cHex+":tBigNumber():H2D()","RESULT: "+cN)
        __ConOut(fhLog,cN+"=="+hb_ntos(n),"RESULT: "+cValToChar(cN==hb_ntos(n)))
        cN := otBH32:H2B("32"):Int()
        __ConOut(fhLog,cHex+":tBigNumber():H2B()","RESULT: "+cN)
        cHex := otBBin:SetValue(cN):B2H("32"):Int()
        __ConOut(fhLog,cN+":tBigNumber():B2H(32)","RESULT: "+cHex)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    otBH32  := FreeObj(otBH32)

    __oRTime1:Calcule()
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste HEX32 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst07(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ ADD Teste 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    n := 1


    otBigN := o1



    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n += 9999.9999999999
        __ConOut(fhLog,cN+"+=9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN += "9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():Add(9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ ADD 1 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst08(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ ADD Teste 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    cN := ("0."+Replicate("0",MIN(nACC_SET,10)))
    n := Val(cN)
    otBigN:SetValue(cN)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n += 9999.9999999999
        __ConOut(fhLog,cN+"+=9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN += "9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():Add(9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ ADD Teste 2 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst09(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ ADD Teste 3 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n += -9999.9999999999
        __ConOut(fhLog,cN+"+=-9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN += "-9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():add(-9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ ADD Teste 3 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst10(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ SUB Teste 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n -= 9999.9999999999
        __ConOut(fhLog,cN+"-=9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN -= "9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():Sub(9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ SUB Teste 1 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst11(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ SUB Teste 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n -= 9999.9999999999
        __ConOut(fhLog,cN+"-=9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN -= "9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():Sub(9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ SUB Teste 2 -------------- END")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst12(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ SUB Teste 3 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        n -= -9999.9999999999
        __ConOut(fhLog,cN+"-=-9999.9999999999","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN -= "-9999.9999999999"



        __ConOut(fhLog,cN+":tBigNumber():Sub(-9999.9999999999)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ SUB Teste 3 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst13(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ MULT Teste 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    n := 1
    otBigN:SetValue(o1)
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        n *= 1.5
        __ConOut(fhLog,cN+"*=1.5","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN *= "1.5"



        __ConOut(fhLog,cN+":tBigNumber():Mult(1.5)","RESULT: "+otBigN:ExactValue())
        cN := otBigW:ExactValue()
        otBigW:SetValue(otBigW:egMult("1.5"))
        __ConOut(fhLog,cN+":tBigNumber():egMult(1.5)","RESULT: "+otBigW:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 1 -------------- END ")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst14(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ MULT Teste 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    n := 1
    otBigN:SetValue(o1)
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        n *= 1.5
        __ConOut(fhLog,cN+"*=1.5","RESULT: " + hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN *= "1.5"



        __ConOut(fhLog,cN+":tBigNumber():Mult(1.5)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 2 -------------- END ")

     __ConOut(fhLog,"")

return

static procedure tBigNTst15(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ MULT Teste 3 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    n := 1
    otBigN:SetValue(o1)
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        n *= 1.5
        __ConOut(fhLog,cN+"*=1.5","RESULT: " + hb_ntos(n))
        cN := otBigW:ExactValue()
        otBigW:SetValue(otBigW:egMult("1.5"))
        __ConOut(fhLog,cN+":tBigNumber():egMult(1.5)","RESULT: "+otBigW:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 3 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst16(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ MULT Teste 4 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    w := 1
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(w)
        w *= 3.555
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        __ConOut(fhLog,cN+"*=3.555","RESULT: " + hb_ntos(w))
        cN := otBigW:ExactValue()

        otBigW *= "3.555"



        __ConOut(fhLog,cN+":tBigNumber():Mult(3.555)","RESULT: "+otBigW:ExactValue())
        cW := otBigW:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Mult(3.555)","RESULT: "+cW)
        cW := otBigW:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Mult(3.555)","RESULT: "+cW)
        cW := otBigW:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Mult(3.555)","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 4 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst17(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ MULT Teste 5 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    w := 1
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(w)
        w *= 3.555
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        __ConOut(fhLog,cN+"*=3.555","RESULT: " + hb_ntos(w))
        cN := otBigW:ExactValue()
        otBigW:SetValue(otBigW:egMult("3.555"))
        __ConOut(fhLog,cN+":tBigNumber():egMult(3.555)","RESULT: "+otBigW:ExactValue())
        cW := otBigW:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():egMult(3.555)","RESULT: "+cW)
        cW := otBigW:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():egMult(3.555)","RESULT: "+cW)
        cW := otBigW:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():egMult(3.555)","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 5 -------------- END ")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst18(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ MULT Teste 6 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    w := 1
    otBigW:SetValue(o1)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(w)
        w *= 3.555
        z := Len(cN)
        While ((SubStr(cN,-1) == "0") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        z := Len(cN)
        While ((SubStr(cN,-1) == "*") .AND. (z>1))
            cN := SubStr(cN,1,--z)
        end
        __ConOut(fhLog,cN+"*=3.555","RESULT: " + hb_ntos(w))
        cN := otBigW:ExactValue()
        otBigW:SetValue(otBigW:rMult("3.555"))
        __ConOut(fhLog,cN+":tBigNumber():rMult(3.555)","RESULT: "+otBigW:ExactValue())
        cW := otBigW:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():rMult(3.555)","RESULT: "+cW)
        cW := otBigW:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():rMult(3.555)","RESULT: "+cW)
        cW := otBigW:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():rMult(3.555)","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ MULT Teste 6 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst19(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste Factoring -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    n := 0
    While ( n <= nN_TEST )
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)



            otBigN := cN

        __ConOut(fhLog,cN+":tBigNumber():Factorial()","RESULT: "+otBigN:Factorial():ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
        n += nISQRT
    end
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Factoring 0 -------------- END ")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst20(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste GCD/LCM 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        cX := hb_ntos(x)
        __oRTime2:SetRemaining(Int(nN_TEST/nISQRT))
        For n := nN_TEST To 1 Step -nISQRT
            cN := hb_ntos(n)
            cW := otBigN:SetValue(cX):GCD(cN):ExactValue()
            __ConOut(fhLog,cX+":tBigNumber():GCD("+cN+")","RESULT: "+cW)
            cW := otBigN:LCM(cN):ExactValue()
            __ConOut(fhLog,cX+":tBigNumber():LCM("+cN+")","RESULT: "+cW)
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste GCD/LCM 0 -------------- END ")

    __ConOut(fhLog,"")

 return

 static procedure tBigNTst21(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ DIV Teste 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

     __oRTime1:SetRemaining(Int(nN_TEST/nISQRT)+1)
    For n := 0 TO nN_TEST Step nISQRT
        cN := hb_ntos(n)
        __oRTime2:SetRemaining(Int(nN_TEST/nISQRT)+1)
        For x := 0 TO nISQRT Step nISQRT
            cX := hb_ntos(x)
            __ConOut(fhLog,cN+"/"+cX,"RESULT: " + hb_ntos(n/x))

            otBigN := cN
            otBigW := (otBigN/cX)
            __ConOut(fhLog,cN+":tBigNumber():Div("+cX+")","RESULT: "+otBigW:ExactValue())





            cW := otBigW:Rnd(nACC_SET):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Div("+cX+")","RESULT: "+cW)
            cW := otBigW:NoRnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Div("+cX+")","RESULT: "+cW)
            cW := otBigW:Rnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Div("+cX+")","RESULT: "+cW)
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ DIV Teste 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst22(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ DIV Teste 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    cN := hb_ntos(n)
    otBigN:SetValue(cN)

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
           __oRTime2:SetRemaining(1)
        cW := hb_ntos(n)
        n /= 1.5
        __ConOut(fhLog,cW+"/=1.5","RESULT: "+hb_ntos(n))
        cN := otBigN:ExactValue()

        otBigN /= "1.5"



        __ConOut(fhLog,cN+":tBigNumber():Div(1.5)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
         __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ DIV Teste 1 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

 return

static procedure tBigNTst23(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)
    LOCAL o3 := __SetType("o3","OBJECT",tBigNumber():New("3"),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ DIV Teste 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    otBigN:SetValue(o1)
    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(x)
        otBigN:SetValue(cN)
        __ConOut(fhLog,cN+"/3","RESULT: "+hb_ntos(x/3))

        otBigN /= o3



        __ConOut(fhLog,cN+":tBigNumber():Div(3)","RESULT: "+otBigN:ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
          __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ DIV Teste 2 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst24(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste FI 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)


    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For n := 1 To nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cN := hb_ntos(n)
        __ConOut(fhLog,cN+":tBigNumber():FI()","RESULT: "+otBigN:SetValue(cN):FI():ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste FI 0 -------------- END ")

return

static procedure tBigNTst25(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)


    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog,"")

    __ConOut(fhLog," BEGIN ------------ Teste SQRT 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int((((nISQRT*999)+999)-((nISQRT*999)-999))/99))
    For x := ((nISQRT*999)-999) TO ((nISQRT*999)+999) STEP 99
           __oRTime2:SetRemaining(1)
        n := x
        cN := hb_ntos(n)
        __ConOut(fhLog,"SQRT("+cN+")","RESULT: " + hb_ntos(SQRT(n)))
        otBigN:SetValue(cN)
        otBigW:SetValue(otBigN:SQRT())
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+otBigW:ExactValue())
        cW := otBigW:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        cW := otBigW:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        cW := otBigW:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste SQRT 1 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst26(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog,"")

    __ConOut(fhLog," BEGIN ------------ Teste SQRT 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))
    For x := 1 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        n := x
        cN := hb_ntos(n)
        __ConOut(fhLog,"SQRT("+cN+")","RESULT: " + hb_ntos(SQRT(n)))

        otBigN :=  cN
        otBigN := otBigN:SQRT()




        cW := otBigN:ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        cW := otBigN:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        cW := otBigN:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        cW := otBigN:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():SQRT()","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste SQRT 2 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst27(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste Exp 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(nISQRT+1)
    For x := 0 TO nISQRT
        __oRTime2:SetRemaining(1)
        n := x
        cN := hb_ntos(n)
        __ConOut(fhLog,"Exp("+cN+")","RESULT: " + hb_ntos(Exp(n)))

    otBigN := cN



        otBigN:SetValue(otBigN:Exp():ExactValue())
        __ConOut(fhLog,cN+":tBigNumber():Exp()","RESULT: "+otBigN:ExactValue())
        cW := otBigN:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Exp()","RESULT: "+cW)
        cW := otBigN:NoRnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Exp()","RESULT: "+cW)
        cW := otBigN:Rnd(8):ExactValue()
        __ConOut(fhLog,cN+":tBigNumber():Exp()","RESULT: "+cW)
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Exp 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst28(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste Pow 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT))

    For x := IF(!(IsHb()),1,0) TO nN_TEST Step nISQRT
        cN := hb_ntos(x)
        __oRTime2:SetRemaining(nISQRT)
        For w := -nISQRT To 0
            cW := hb_ntos(w)
            n := x
            n := (n^w)
            __ConOut(fhLog,cN+"^"+cW,"RESULT: " + hb_ntos(n))

            otBigN := cN



            cN := otBigN:ExactValue()


            otBigN ^= cW



            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+otBigN:ExactValue())
            cX := otBigN:Rnd(nACC_SET):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            cX := otBigN:NoRnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            cX := otBigN:Rnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Pow 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst29(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste Pow 1 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining((nISQRT/5)+1)
    For x := 0 TO nISQRT STEP 5
        cN := hb_ntos(x)
        __oRTime2:SetRemaining((nISQRT/5)+1)
        For w := 0 To nISQRT STEP 5
            cW := hb_ntos(w+.5)
            n := x
            n := (n^(w+.5))
            __ConOut(fhLog,cN+"^"+cW,"RESULT: " + hb_ntos(n))

                otBigN := cN



            cN := otBigN:ExactValue()

                otBigN ^= cW



            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+otBigN:ExactValue())
            cX := otBigN:Rnd(nACC_SET):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            cX := otBigN:NoRnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            cX := otBigN:Rnd(8):ExactValue()
            __ConOut(fhLog,cN+":tBigNumber():Pow("+cW+")","RESULT: "+cX)
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Pow 1 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst30(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste Pow 2 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(2)
    For n := 1 To 2
        __oRTime2:SetRemaining(1)
        IF ( n == 1 )
            otBigN:SetValue("1.5")
            __ConOut(fhLog,"otBigN","RESULT: "+otBigN:ExactValue())
            __ConOut(fhLog,"otBigN:Pow('0.5')","RESULT: "+otBigN:SetValue(otBigN:Pow("0.5")):ExactValue())
            __ConOut(fhLog,"otBigN:Pow('0.5')","RESULT: "+otBigN:Rnd():ExactValue())
        Else
            __ConOut(fhLog,"otBigN:nthroot('0.5')","RESULT: "+otBigN:SetValue(otBigN:nthroot("0.5")):ExactValue())
            __ConOut(fhLog,"otBigN:nthroot('0.5')","RESULT: "+otBigN:Rnd():ExactValue())
            __ConOut(fhLog,"otBigN:nthroot('0.5')","RESULT: "+otBigN:Rnd(2):ExactValue())
        EndIF
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste Pow 2 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst31(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL laLog := __SetType("laLog","LOGICAL",,,)

    LOCAL o0 := __SetType("o0","OBJECT",tBigNumber():New("0"),"TBIGNUMBER",)
    LOCAL o1 := __SetType("o1","OBJECT",tBigNumber():New("1"),"TBIGNUMBER",)
    LOCAL o2 := __SetType("o2","OBJECT",tBigNumber():New("2"),"TBIGNUMBER",)
    LOCAL o3 := __SetType("o3","OBJECT",tBigNumber():New("3"),"TBIGNUMBER",)
    LOCAL o4 := __SetType("o4","OBJECT",tBigNumber():New("4"),"TBIGNUMBER",)
    LOCAL o5 := __SetType("o5","OBJECT",tBigNumber():New("5"),"TBIGNUMBER",)
    LOCAL o6 := __SetType("o6","OBJECT",tBigNumber():New("6"),"TBIGNUMBER",)
    LOCAL o7 := __SetType("o7","OBJECT",tBigNumber():New("7"),"TBIGNUMBER",)
    LOCAL o8 := __SetType("o8","OBJECT",tBigNumber():New("8"),"TBIGNUMBER",)
    LOCAL o9 := __SetType("o9","OBJECT",tBigNumber():New("9"),"TBIGNUMBER",)
    LOCAL o10 := __SetType("o10","OBJECT",tBigNumber():New("10"),"TBIGNUMBER",)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste LOG 0 -------------- ")

     __oRTime1:SetRemaining(13)

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    laLog       := lL_ALOG
    otBigW:SetDecimals(nACC_ALOG)
    otBigW:nthRootAcc(nACC_ALOG-1)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Ln():ExactValue()
    __ConOut(fhLog,"100000000000000000000000000000:tBigNumber():Ln()","RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+":tBigNumber():aLn()","RESULT: "+otBigW:aLn():ExactValue())
        otBigW:SetValue(otBigW:e())
        otBigW:SetValue(otBigW:Pow(cX))
        __ConOut(fhLog,cX+":tBigNumber():aLn()","RESULT: "+otBigW:ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log2():ExactValue()
    __ConOut(fhLog,"100000000000000000000000000000:tBigNumber():Log2()","RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+":tBigNumber():aLog2()","RESULT: "+otBigW:aLog2():ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log10():ExactValue()
    __ConOut(fhLog,"100000000000000000000000000000:tBigNumber():Log10()","RESULT: "+cX)
    IF ( laLog )
           otBigW:SetValue(cX)
        __ConOut(fhLog,cX+":tBigNumber():aLog10()","RESULT: "+otBigW:aLog10():ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o1):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("1")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("1")'  ,"RESULT: "+otBigW:aLog(o1):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o2):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("2")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("2")'  ,"RESULT: "+otBigW:aLog(o2):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o3):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("3")'  ,"RESULT: "+cX)
    IF ( laLog )
        __ConOut(fhLog,cX+':tBigNumber():aLog("3")'  ,"RESULT: "+otBigW:SetValue(cX):aLog(o3):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o4):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("4")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("4")'  ,"RESULT: "+otBigW:aLog(o4):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o5):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("5")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("5")'  ,"RESULT: "+otBigW:aLog(o5):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o6):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("6")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("6")'  ,"RESULT: "+otBigW:aLog(o6):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o7):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("7")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("7")'  ,"RESULT: "+otBigW:aLog(o7):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o8):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("8")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("8")'  ,"RESULT: "+otBigW:aLog(o8):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o9):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("9")'  ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("9")'  ,"RESULT: "+otBigW:aLog(o9):ExactValue())
    EndIF
    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __oRTime2:SetRemaining(1)
    cX := otBigW:SetValue("100000000000000000000000000000"):Log(o10):ExactValue()
    __ConOut(fhLog,'100000000000000000000000000000:tBigNumber():Log("10")' ,"RESULT: "+cX)
    IF ( laLog )
        otBigW:SetValue(cX)
        __ConOut(fhLog,cX+':tBigNumber():aLog("10")' ,"RESULT: "+otBigW:aLog(o10):ExactValue())
    EndIF

    o0  := FreeObj(o0)
    o1  := FreeObj(o1)
    o2  := FreeObj(o2)
    o3  := FreeObj(o3)
    o4  := FreeObj(o4)
    o5  := FreeObj(o5)
    o6  := FreeObj(o6)
    o7  := FreeObj(o7)
    o8  := FreeObj(o8)
    o9  := FreeObj(o9)
    o10 := FreeObj(o10)

    __oRTime2:Calcule()
    __oRTime1:Calcule()
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste LOG 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst32(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL laLog := __SetType("laLog","LOGICAL",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

   __ConOut(fhLog," BEGIN ------------ Teste LOG 1 -------------- ")

    laLog       := lL_ALOG

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")



    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT)+1)
    For w := 0 TO nN_TEST Step nISQRT
        cW := hb_ntos(w)
        otBigW:SetValue(cW)
        __ConOut(fhLog,"Log("+cW+")","RESULT: "+hb_ntos(Log(w)))
        cX := otBigW:SetValue(cW):Log():ExactValue()
        __ConOut(fhLog,cW+":tBigNumber():Log()"  ,"RESULT: "+cX)
         otBigN:SetValue(cX)
        cX := otBigN:Rnd(nACC_SET):ExactValue()
        __ConOut(fhLog,cW+":tBigNumber():Log()","RESULT: "+cX)
        cX := otBigN:NoRnd(8):ExactValue()
        __ConOut(fhLog,cW+":tBigNumber():Log()","RESULT: "+cX)
        cX := otBigN:Rnd(8):ExactValue()
        __ConOut(fhLog,cW+":tBigNumber():Log()","RESULT: "+cX)
        __ConOut(fhLog,__cSep)
        __oRTime2:SetRemaining(INT(MAX(nISQRT,5)/5)+1)
        For n := 0 TO INT(MAX(nISQRT,5)/5)
            cN := hb_ntos(n)
            cX := otBigW:SetValue(cW):Log(cN):ExactValue()
            __ConOut(fhLog,cW+':tBigNumber():Log("'+cN+'")',"RESULT: "+cX)
            otBigN:SetValue(cX)
            cX := otBigN:Rnd(nACC_SET):ExactValue()
            __ConOut(fhLog,cW+':tBigNumber():Log("'+cN+'")',"RESULT: "+cX)
            cX := otBigN:NoRnd(8):ExactValue()
            __ConOut(fhLog,cW+':tBigNumber():Log("'+cN+'")',"RESULT: "+cX)
            cX := otBigN:Rnd(8):ExactValue()
            __ConOut(fhLog,cW+':tBigNumber():Log("'+cN+'")',"RESULT: "+cX)
            IF ( laLog )
                __ConOut(fhLog,cX+':tBigNumber():aLog("'+cN+'")'  ,"RESULT: "+otBigW:SetValue(cX):aLog(cN):ExactValue())
            EndIF
            __oRTime2:Calcule()
            __oRTime1:Calcule(.F.)
            __ConOut(fhLog,__cSep)
            __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
            __ConOut(fhLog,__cSep)
        next
        __oRTime1:Calcule()
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste LOG 1 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst33(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL laLog := __SetType("laLog","LOGICAL",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste LN 1 -------------- ")

    laLog       := lL_ALOG

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")



    __oRTime1:SetRemaining(Int(nN_TEST/nISQRT)+1)
    For w := 0 TO nN_TEST Step nISQRT
        __oRTime2:SetRemaining(1)
        cW := hb_ntos(w)
        cX := otBigW:SetValue(cW):Ln():ExactValue()
        __ConOut(fhLog,cW+":tBigNumber():Ln()","RESULT: "+cX)
        IF ( laLog )
            __ConOut(fhLog,cX+":tBigNumber():aLn()","RESULT: "+otBigW:SetValue(cX):aLn():ExactValue())
        EndIF
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste LN 1 -------------- END ")

    __ConOut(fhLog,"")

return

static procedure tBigNTst34(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL o2 := __SetType("o2","OBJECT",tBigNumber():New("2"),"TBIGNUMBER",)


    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL oPrime := __SetType("oPrime","OBJECT",tPrime():New(),"TPRIME",)

    LOCAL lMR := __SetType("lMR","LOGICAL",,,)
    LOCAL lPn := __SetType("lPn","LOGICAL",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste millerRabin 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    n := 0
    __oRTime1:SetRemaining((nISQRT/2)+1)
    __oRTime2:SetRemaining(1)
    While ( n <= nISQRT )
        IF ( n < 3 )
            n += 1
        Else
            n += 2
        EndIF
        cN := hb_ntos(n)
        lPn := oPrime:IsPrime(cN,.T.)
        lMR := IF( lPn , lPn , otBigN:SetValue(cN):millerRabin(o2) )
        __ConOut(fhLog,cN+":tBigNumber():millerRabin()","RESULT: "+cValToChar(lMR)+IF(lMR,"","   "))
        __ConOut(fhLog,cN+":tPrime():IsPrime()","RESULT: "+cValToChar(lPn)+IF(lPn,"","   "))
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    end
    oPrime:IsPReset()
    oPrime:NextPReset()

    oPrime := FreeObj(oPrime)

    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste millerRabin 0 -------------- END ")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

    __ConOut(fhLog,"")

return

static procedure tBigNTst35(fhLog)

    LOCAL otBigN := __SetType("otBigN","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigW := __SetType("otBigW","OBJECT",tBigNumber():New(),"TBIGNUMBER",)
    LOCAL otBigX := __SetType("otBigX","OBJECT",tBigNumber():New(),"TBIGNUMBER",)

    LOCAL cN := __SetType("cN","CHARACTER",,,)
    LOCAL cW := __SetType("cW","CHARACTER",,,)
    LOCAL cX := __SetType("cX","CHARACTER",,,)
    LOCAL cHex := __SetType("cHex","CHARACTER",,,)

    LOCAL n := __SetType("n","NUMBER",,,)
    LOCAL w := __SetType("w","NUMBER",,,)
    LOCAL x := __SetType("x","NUMBER",,,)
    LOCAL z := __SetType("z","NUMBER",,,)

    LOCAL lMR := __SetType("lMR","LOGICAL",,,)
    LOCAL lPn := __SetType("lPn","LOGICAL",,,)

    MEMVAR nACC_SET
    MEMVAR nROOT_ACC_SET
    MEMVAR nACC_ALOG
    MEMVAR __nSLEEP
    MEMVAR nN_TEST
    MEMVAR lL_ALOG
    MEMVAR aC_OOPROGRESS
    MEMVAR lL_OOPROGRAND
    MEMVAR lL_ROPROGRESS
    MEMVAR lL_LOGPROCESS

    MEMVAR __CRLF
    MEMVAR __cSep

    MEMVAR __oRTime1
    MEMVAR __oRTime2
    MEMVAR __nMaxRow
    MEMVAR __nMaxCol
    MEMVAR __nCol
    MEMVAR __nRow
    MEMVAR __noProgress

    MEMVAR __lKillProgress
    MEMVAR __oRTimeProc
    MEMVAR __phMutex

    MEMVAR nISQRT

    if (.F.); fhLog := if(fhLog == NIL,,fhLog); endif

    __ConOut(fhLog," BEGIN ------------ Teste RANDOMIZE 0 -------------- ")

    otBigN:SetDecimals(nACC_SET)
    otBigN:nthRootAcc(nROOT_ACC_SET)
    otBigN:SysSQRT(0)

    otBigW:SetDecimals(nACC_SET)
    otBigW:nthRootAcc(nROOT_ACC_SET)
    otBigW:SysSQRT(0)

    Set(3,8)

    __ConOut(fhLog,"")

    __oRTime1:SetRemaining(nISQRT)
    For n := 1 To nISQRT
        __oRTime2:SetRemaining(1)
        __ConOut(fhLog,"tBigNumber():Randomize()","RESULT: "+otBigN:Randomize():ExactValue())
        __ConOut(fhLog,"tBigNumber():Randomize(999999999999,9999999999999)","RESULT: "+otBigN:Randomize("999999999999","9999999999999"):ExactValue())
        __ConOut(fhLog,'tBigNumber():Randomize(1,9999999999999999999999999999999999999999"',"RESULT: "+otBigN:Randomize("1","9999999999999999999999999999999999999999"):ExactValue())
        __oRTime2:Calcule()
        __oRTime1:Calcule()
        __ConOut(fhLog,__cSep)
        __ConOut(fhLog,"MEDIUM TIME: "+__oRTime2:GetcMediumTime())
        __ConOut(fhLog,__cSep)
    next
    __ConOut(fhLog,"MEDIUM TIME: "+__oRTime1:GetcMediumTime())
    __ConOut(fhLog,__cSep)

    __ConOut(fhLog,"")

    __ConOut(fhLog," ------------ Teste RANDOMIZE  0 -------------- END ")

    __ConOut(fhLog,__cSep)
    __ConOut(fhLog,"")
    __ConOut(fhLog,__cSep)

return

static function GettBigNTst()

    local aTBigNTst:=Array(35,2)

    aTBigNTst[1][1]:={|p|tBigNTst01(p)};aTBigNTst[1][2]:=.T.
    aTBigNTst[2][1]:={|p|tBigNTst02(p)};aTBigNTst[2][2]:=.T.
    aTBigNTst[3][1]:={|p|tBigNTst03(p)};aTBigNTst[3][2]:=.T.
    aTBigNTst[4][1]:={|p|tBigNTst04(p)};aTBigNTst[4][2]:=.T.
    aTBigNTst[5][1]:={|p|tBigNTst05(p)};aTBigNTst[5][2]:=.T.
    aTBigNTst[6][1]:={|p|tBigNTst06(p)};aTBigNTst[6][2]:=.T.
    aTBigNTst[7][1]:={|p|tBigNTst07(p)};aTBigNTst[7][2]:=.T.
    aTBigNTst[8][1]:={|p|tBigNTst08(p)};aTBigNTst[8][2]:=.T.
    aTBigNTst[9][1]:={|p|tBigNTst09(p)};aTBigNTst[9][2]:=.T.


    aTBigNTst[10][1]:={|p|tBigNTst10(p)};aTBigNTst[10][2]:=.T.
    aTBigNTst[11][1]:={|p|tBigNTst11(p)};aTBigNTst[11][2]:=.T.
    aTBigNTst[12][1]:={|p|tBigNTst12(p)};aTBigNTst[12][2]:=.T.
    aTBigNTst[13][1]:={|p|tBigNTst13(p)};aTBigNTst[13][2]:=.T.
    aTBigNTst[14][1]:={|p|tBigNTst14(p)};aTBigNTst[14][2]:=.T.
    aTBigNTst[15][1]:={|p|tBigNTst15(p)};aTBigNTst[15][2]:=.T.
    aTBigNTst[16][1]:={|p|tBigNTst16(p)};aTBigNTst[16][2]:=.T.
    aTBigNTst[17][1]:={|p|tBigNTst17(p)};aTBigNTst[17][2]:=.T.
    aTBigNTst[18][1]:={|p|tBigNTst18(p)};aTBigNTst[18][2]:=.T.
    aTBigNTst[19][1]:={|p|tBigNTst19(p)};aTBigNTst[19][2]:=.T.

    aTBigNTst[20][1]:={|p|tBigNTst20(p)};aTBigNTst[20][2]:=.T.
    aTBigNTst[21][1]:={|p|tBigNTst21(p)};aTBigNTst[21][2]:=.T.
    aTBigNTst[22][1]:={|p|tBigNTst22(p)};aTBigNTst[22][2]:=.T.
    aTBigNTst[23][1]:={|p|tBigNTst23(p)};aTBigNTst[23][2]:=.T.
    aTBigNTst[24][1]:={|p|tBigNTst24(p)};aTBigNTst[24][2]:=.T.
    aTBigNTst[25][1]:={|p|tBigNTst25(p)};aTBigNTst[25][2]:=.T.
    aTBigNTst[26][1]:={|p|tBigNTst26(p)};aTBigNTst[26][2]:=.T.
    aTBigNTst[27][1]:={|p|tBigNTst27(p)};aTBigNTst[27][2]:=.T.
    aTBigNTst[28][1]:={|p|tBigNTst28(p)};aTBigNTst[28][2]:=.T.
    aTBigNTst[29][1]:={|p|tBigNTst29(p)};aTBigNTst[29][2]:=.T.

    aTBigNTst[30][1]:={|p|tBigNTst30(p)};aTBigNTst[30][2]:=.T.
    aTBigNTst[31][1]:={|p|tBigNTst31(p)};aTBigNTst[31][2]:=.T.
    aTBigNTst[32][1]:={|p|tBigNTst32(p)};aTBigNTst[32][2]:=.T.
    aTBigNTst[33][1]:={|p|tBigNTst33(p)};aTBigNTst[33][2]:=.T.
    aTBigNTst[34][1]:={|p|tBigNTst34(p)};aTBigNTst[34][2]:=.T.
    aTBigNTst[35][1]:={|p|tBigNTst35(p)};aTBigNTst[35][2]:=.T.

return(aTBigNTst)
